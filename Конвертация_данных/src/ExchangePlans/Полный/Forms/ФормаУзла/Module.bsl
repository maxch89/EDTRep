
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ИспользоватьОтборПоКонвертациям Тогда
		РежимОтправкиКонвертаций = "ВыбранныеКонвертации";
	Иначе
		РежимОтправкиКонвертаций = "ВсеКонвертации";
	КонецЕсли;
	
	Если Объект.Ссылка = ПланыОбмена.Полный.ЭтотУзел() Тогда
		
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаВыполнениеОбменаДанными.Видимость = Ложь;
		
	КонецЕсли;
	
	ОбновитьНаименованиеКомандФормы();
	
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Оповестить("ЗакрытаФормаУзлаПланаОбмена");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбновитьДанныеОбъекта(ВыбранноеЗначение);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если РежимОтправкиКонвертаций = "ВсеКонвертации" Тогда
		Объект.ИспользоватьОтборПоКонвертациям = Ложь;
		Объект.Конвертации.Очистить();
	Иначе
		Объект.ИспользоватьОтборПоКонвертациям = Не Объект.Конвертации.Количество() = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВсеКонвертацииПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьКонвертации(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВыбираемыйСправочник",     "Конвертации");
	ПараметрыФормы.Вставить("ТаблицаЗаполнения",        "Конвертации");
	ПараметрыФормы.Вставить("КолонкаЗаполнения",        "Конвертация");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",     НСтр("ru = 'Отправлять данные по конвертациям'"));
	ПараметрыФормы.Вставить("ТаблицаВыбранныхЗначений", СформироватьТаблицуВыбранныхЗначений(ПараметрыФормы));
	ПараметрыФормы.Вставить("РежимУпорядочивания",      "");
	
	ОткрытьФорму("ПланОбмена.Полный.Форма.ФормаВыбораЗначений",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеКонвертацииПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаБлокИнформированияОВыбранныхКонвертациях",
		"Доступность",
		РежимОтправкиКонвертаций = "ВыбранныеКонвертации");
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаВсеНастройки",
		"Доступность",
		ПланыОбмена.ГлавныйУзел() = Неопределено);
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеКомандФормы()
	
	//Обновим заголовок выбранных конвертаций
	Если Объект.Конвертации.Количество() > 0 Тогда
		
		ВыбранныеКонвертации = Объект.Конвертации.Выгрузить();
		ВыбранныеКонвертации.Колонки.Конвертация.Имя = "Ссылка";
		НовыйЗаголовокКонвертаций = СформироватьТекстовоеПредставлениеКоллекции(ВыбранныеКонвертации);
		
	Иначе
		
		НовыйЗаголовокКонвертаций = НСтр("ru = '<Конвертации не выбраны>'");
		
	КонецЕсли;
	
	Элементы.ДекорацияВыбранныеКонвертации.Заголовок = НовыйЗаголовокКонвертаций;
	
КонецПроцедуры

&НаСервере
Функция СформироватьТаблицуВыбранныхЗначений(ПараметрыФормы)
	
	ТабличнаяЧасть           = Объект[ПараметрыФормы.ТаблицаЗаполнения];
	ТаблицаВыбранныхЗначений = ТабличнаяЧасть.Выгрузить(,ПараметрыФормы.КолонкаЗаполнения);
	Возврат ПоместитьВоВременноеХранилище(ТаблицаВыбранныхЗначений, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция СформироватьТекстовоеПредставлениеКоллекции(Коллекция)
	
	СтрокаПредставления = "";
	
	КоличествоВыводимыхЭлементов = Коллекция.Количество();
	
	Если КоличествоВыводимыхЭлементов = 0 Тогда
		
		Возврат "";
		
	Иначе
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ТаблицаВыбранныхЗначений.Ссылка КАК СсылкаНаОбъект
		                      |ПОМЕСТИТЬ ТаблицаВыбранныхЗначений
		                      |ИЗ
		                      |	&ТаблицаВыбранныхЗначений КАК ТаблицаВыбранныхЗначений
		                      |
		                      |ИНДЕКСИРОВАТЬ ПО
		                      |	СсылкаНаОбъект
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ТаблицаВыбранныхЗначений.СсылкаНаОбъект,
		                      |	0 КАК ЕстьПодчиненные
		                      |ИЗ
		                      |	ТаблицаВыбранныхЗначений КАК ТаблицаВыбранныхЗначений
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ТаблицаВыбранныхЗначений.СсылкаНаОбъект");
			
		Запрос.УстановитьПараметр("ТаблицаВыбранныхЗначений", Коллекция);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			ОбъектКоллекции = Выборка.СсылкаНаОбъект;
			
			СтрокаПредставления = СтрокаПредставления 
				+ ОбъектКоллекции 
				+ ?(Выборка.ЕстьПодчиненные > 0, НСтр("ru = ' (Включая подчиненные)'"), "")
				+ ", ";
			
		КонецЦикла;
		
		СтрокаПредставления = Лев(СтрокаПредставления, СтрДлина(СтрокаПредставления) - 2);
		
	КонецЕсли;
	
	Возврат СтрокаПредставления;
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеОбъекта(СтруктураПараметров)
	
	Объект[СтруктураПараметров.ТаблицаЗаполнения].Очистить();
	
	СписокВыбранныхЗначений = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресТаблицыВоВременномХранилище);
	
	Если СписокВыбранныхЗначений.Количество() > 0 Тогда
		СписокВыбранныхЗначений.Колонки.Представление.Имя = СтруктураПараметров.КолонкаЗаполнения;
		Объект[СтруктураПараметров.ТаблицаЗаполнения].Загрузить(СписокВыбранныхЗначений);
	КонецЕсли;
	
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти