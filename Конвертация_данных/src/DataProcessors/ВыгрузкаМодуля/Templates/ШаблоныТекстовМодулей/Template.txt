#Область ВерсияФорматаМенеджераОбмена
// Возвращает версию формата менеджера обмена.
// Возвращаемое значение:
//  Число - номер версии.
Функция ВерсияФорматаМенеджераОбмена() Экспорт
    Возврат &ВерсияФорматаМенеджераОбмена;
КонецФункции
#Область ЗаполнитьПравилаОбработкиДанных
// Заполняет таблицу правил обработки данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаОбработкиДанных - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаОбработкиДанных(НаправлениеОбмена, ПравилаОбработкиДанных) Экспорт
&ТелоПроцедуры
КонецПроцедуры
#Область ПОД
&ОбъявлениеОбласти
Процедура &ИмяПОД(ПравилаОбработкиДанных)
	ПравилоОбработки                         = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя                     = "&ИмяПОДДляТаблицы";
	ПравилоОбработки.ОбъектВыборкиМетаданные = &ОбъектВыборкиМетаданные;
	ПравилоОбработки.ОбъектВыборкиФормат     = "&ОбъектВыборкиФормат";
	ПравилоОбработки.ПриОбработке            = "&ПриОбработке";
	ПравилоОбработки.ВыборкаДанных           = "&ВыборкаДанных";
	ПравилоОбработки.ОчисткаДанных           = &ОчисткаДанных;
&ЗаполнениеМассиваПравил
КонецПроцедуры
&ОбработчикиПОД
&КонецОбласти
#Область ЗаполнитьПравилаКонвертацииОбъектов
// Заполняет таблицу правил конвертации объектов.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаКонвертацииОбъектов(НаправлениеОбмена, ПравилаКонвертации) Экспорт
&ТелоПроцедуры
КонецПроцедуры

Функция ДобавитьПКТЧ(ПравилоКонвертации, ИмяТЧКонфигурации, ИмяТЧФормата)
    Если ПравилоКонвертации.СвойстваТабличныхЧастей.Колонки.Количество() = 0 Тогда
        ОбменДаннымиXDTOСервер.ИнициализироватьСвойстваТабличныхЧастей(ПравилоКонвертации);
    КонецЕсли;
    КонвертацияТабличнойЧасти                = ПравилоКонвертации.СвойстваТабличныхЧастей.Добавить();
    КонвертацияТабличнойЧасти.ТЧКонфигурации = ИмяТЧКонфигурации;
    КонвертацияТабличнойЧасти.ТЧФормата      = ИмяТЧФормата;
    КонвертацияТабличнойЧасти.Свойства       = ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации();
    Возврат КонвертацияТабличнойЧасти.Свойства;
КонецФункции

Процедура ДобавитьПКС(РодительПКС, СвойствоКонфигурации, СвойствоФормата, ИспользуетсяАлгоритмКонвертации = 0, 
                    ПравилоКонвертацииСвойства = "")
	НоваяСтрока                                 = РодительПКС.Добавить();
	НоваяСтрока.СвойствоКонфигурации            = СвойствоКонфигурации;
	НоваяСтрока.СвойствоФормата                 = СвойствоФормата;
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = ?(ИспользуетсяАлгоритмКонвертации = 0, Ложь, Истина);
	НоваяСтрока.ПравилоКонвертацииСвойства      = ПравилоКонвертацииСвойства;
КонецПроцедуры
#Область ПКО_ЕстьПолучение
&ОбъявлениеОбласти
Процедура ДобавитьПКО_&ИмяПКО(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "&ИмяПКО";
	ПравилоКонвертации.ОбъектДанных                 = &ОбъектДанных;
	ПравилоКонвертации.ОбъектФормата                = "&ОбъектФормата";
	ПравилоКонвертации.ПравилоДляГруппыСправочника  = &ПравилоДляГруппыСправочника;
	ПравилоКонвертации.ПриОтправкеДанных            = "&ПриОтправкеДанных";
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO     = "&ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ПередЗаписьюПолученныхДанных = "&ПередЗаписьюПолученныхДанных";
	ПравилоКонвертации.ПослеЗагрузкиВсехДанных      = "&ПослеЗагрузкиВсехДанных";
	ПравилоКонвертации.ВариантИдентификации         = "&ВариантИдентификации";
	
&ЗаполнениеПКС
&ЗаполнениеТЧПКС
&ЗаполнениеПолейПоиска
КонецПроцедуры
&ОбработчикиПКО
&КонецОбласти
#Область ПКО_ТолькоОтправка
&ОбъявлениеОбласти
Процедура ДобавитьПКО_&ИмяПКО(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО            = "&ИмяПКО";
	ПравилоКонвертации.ОбъектДанных      = &ОбъектДанных;
	ПравилоКонвертации.ОбъектФормата     = "&ОбъектФормата";
	ПравилоКонвертации.ПравилоДляГруппыСправочника  = &ПравилоДляГруппыСправочника;
	ПравилоКонвертации.ПриОтправкеДанных = "&ПриОтправкеДанных";
	
&ЗаполнениеПКС
&ЗаполнениеТЧПКС
КонецПроцедуры
&ОбработчикиПКО
&КонецОбласти
#Область Конвертация_Параметры_ПОД_ПередОбработкой
(_ОбъектОбработки, _КомпонентыОбмена)
#Область Конвертация_Параметры_ПОД_ПриОбработке
(_ОбъектОбработки, _ИспользованиеПКО, _КомпонентыОбмена)
#Область Конвертация_Параметры_ПОД_ВыборкаДанных
(_КомпонентыОбмена)
#Область Конвертация_Параметры_ПКО_ПередОтправкойДанных
(_Источник, _ТипПриемника, _Параметры, _КомпонентыОбмена)
#Область Конвертация_Параметры_ПКО_ПриОтправкеДанных
(_ДанныеИБ, _ДанныеXDTO, _КомпонентыОбмена, _СтекВыгрузки)
#Область Конвертация_Параметры_ПКО_ПриКонвертацииДанныхXDTO
(_ДанныеXDTO, _ПолученныеДанные, _КомпонентыОбмена)
#Область Конвертация_Параметры_ПКО_ПередЗаписьюПолученныхДанных
(_ПолученныеДанные, _ДанныеИБ, _КонвертацияСвойств, _КомпонентыОбмена)
#Область Конвертация_ПроцедурыПКПД_Комментарий
#Область Конвертация_ЗаполнитьПравилаКонвертацииПредопределенныхДанных_Заголовок
// Заполняет таблицу правил конвертации предопределенных данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую будут добавлены правила. 
Процедура ЗаполнитьПравилаКонвертацииПредопределенныхДанных(НаправлениеОбмена, ПравилаКонвертации) Экспорт
#Область Конвертация_ЗаполнитьПравилаКонвертацииПредопределенныхДанных_СтрокаПравила
	// [Наименование].
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "[Наименование]";
	ПравилоКонвертации.ТипДанных = [ОбъектДанных];
	ПравилоКонвертации.ТипXDTO   = "[ОбъектФормата]";
#Область Конвертация_Алгоритмы_Комментарий
#Область Конвертация_Параметры_Комментарий
#Область Конвертация_ЗаполнитьПараметрыКонвертации_Заголовок
// Заполняет параметры конвертации.
//
// Параметры:
//  ПараметрыКонвертации - структура, в которую добавляются параметры конвертации.
Процедура ЗаполнитьПараметрыКонвертации(ПараметрыКонвертации) Экспорт
#Область Конвертация_Общие_Комментарий
#Область Конвертация_ПроцедураВызоваОбработчика_Заголовок
// Процедура-обертка, выполняет запуск указанной в параметрах процедуры модуля менеджера обмена через формат.
//
// Параметры:
//  ИмяПроцедуры - строка.
//  СтруктураПараметров - структура, содержащая передаваемые параметры.
Процедура ВыполнитьПроцедуруМодуляМенеджера(ИмяПроцедуры, Параметры) Экспорт
#Область Конвертация_ФункцияВызоваОбработчика_Заголовок
// Процедура-обертка, выполняет запуск указанной в параметрах функции модуля менеджера обмена через формат.
//
// Параметры:
//  ИмяФункции - строка.
//  СтруктураПараметров - структура, содержащая передаваемые параметры.
Функция ВыполнитьФункциюМодуляМенеджера(ИмяФункции, Параметры) Экспорт
