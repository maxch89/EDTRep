#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВариантРаботы = "Единичный";
	УстановитьВидимость();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантРаботыПриИзменении(Элемент)
	Если ВариантРаботы = "Единичный" И СписокКонвертаций.Количество() > 0 Тогда
		Объект.Конвертация = СписокКонвертаций[0].Значение;
	ИначеЕсли ВариантРаботы = "Множественный" И СписокКонвертаций.Количество() = 0
		И ЗначениеЗаполнено(Объект.Конвертация) Тогда
		СписокКонвертаций.Добавить(Объект.Конвертация);
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОбособитьКонвертацию(Команда)
	Если ВариантРаботы = "Единичный" И НЕ ЗначениеЗаполнено(Объект.Конвертация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указана конвертация'"));
		Возврат;
	ИначеЕсли ВариантРаботы = "Множественный" И СписокКонвертаций.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указана ни одна конвертация'"));
		Возврат;
	КонецЕсли;
	МассивСвязанныхКонвертаций = СвязанныеКонвертации(ВариантРаботы, Объект.Конвертация, СписокКонвертаций.ВыгрузитьЗначения());
	Если МассивСвязанныхКонвертаций.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Данная конвертация уже обособлена.'"));
		Возврат;
	КонецЕсли;
	Если ВариантРаботы = "Единичный" Тогда
		ТекстВопроса = НСтр("ru = 'Данная конвертация будет обособлена от следующих конвертаций'") + Символы.ПС;
	Иначе
		ТекстВопроса = НСтр("ru = 'Указанные конвертации будут обособлены от следующих конвертаций'") + Символы.ПС;
	КонецЕсли;
	Для Каждого СвязаннаяКонвертация Из МассивСвязанныхКонвертаций Цикл
		ТекстВопроса = ТекстВопроса + СокрЛП(СвязаннаяКонвертация) + ", ";
	КонецЦикла;
	ТекстВопроса = Лев(ТекстВопроса, СтрДлина(ТекстВопроса)-2) + Символы.ПС + НСтр("ru = 'Продолжить?'");
	ПоказатьВопрос(Новый ОписаниеОповещения("ВыбранВариантДействий", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции
&НаКлиенте
// Обработчик ожидания после ответа на вопрос пользователя.
Процедура ВыбранВариантДействий(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	ОбособитьКонвертациюНаСервере(ВариантРаботы,Объект.Конвертация, СписокКонвертаций.ВыгрузитьЗначения());
	Если ВариантРаботы = "Единичный" Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Конвертация обособлена.'"));
	Иначе
		ПоказатьПредупреждение(,НСтр("ru = 'Конвертации обособлены.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Если ВариантРаботы = "Единичный" Тогда
		ТекСтраница = Элементы.ОднаКонвертация;
		ЗаголовокКнопки = НСтр("ru = 'Обособить конвертацию'");
	Иначе
		ТекСтраница = Элементы.НесколькоКонвертаций;
		ЗаголовокКнопки = НСтр("ru = 'Обособить конвертации'");
	КонецЕсли;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ТекСтраница;
	Элементы.ФормаОбособитьКонвертацию.Заголовок = ЗаголовокКнопки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СвязанныеКонвертации(ВариантРаботы, Конвертация, МассивКонвертаций)
	Запрос = Новый Запрос;
	Если ВариантРаботы = "Единичный" Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставЧужая.Владелец КАК КонвертацияСвязанная
		|ИЗ Справочник.СоставыКонвертаций КАК СоставНаша
		|СОЕДИНЕНИЕ Справочник.СоставыКонвертаций КАК СоставЧужая
		|ПО СоставНаша.Владелец <> СоставЧужая.Владелец
		|	И СоставНаша.ЭлементКонвертации = СоставЧужая.ЭлементКонвертации
		|	И НЕ СоставЧужая.Отключить И НЕ СоставЧужая.ПометкаУдаления
		|ГДЕ СоставНаша.Владелец = &ТекКонвертация И НЕ СоставНаша.Отключить
		|	И НЕ СоставНаша.ПометкаУдаления
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.Алгоритмы.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииОбъектов.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаОбработкиДанных.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииПредопределенныхДанных.ПустаяСсылка)";
		Запрос.УстановитьПараметр("ТекКонвертация", Конвертация);
	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставЧужая.Владелец КАК КонвертацияСвязанная
		|ИЗ Справочник.СоставыКонвертаций КАК СоставНаша
		|СОЕДИНЕНИЕ Справочник.СоставыКонвертаций КАК СоставЧужая
		|ПО СоставНаша.ЭлементКонвертации = СоставЧужая.ЭлементКонвертации
		|	И НЕ СоставЧужая.Отключить И НЕ СоставЧужая.ПометкаУдаления
		|ГДЕ СоставНаша.Владелец В (&МассивКонвертаций) И НЕ СоставНаша.Отключить
		|	И НЕ (СоставЧужая.Владелец В (&МассивКонвертаций))
		|	И НЕ СоставНаша.ПометкаУдаления
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.Алгоритмы.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииОбъектов.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаОбработкиДанных.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииПредопределенныхДанных.ПустаяСсылка)";

		Запрос.УстановитьПараметр("МассивКонвертаций", МассивКонвертаций);
	КонецЕсли;
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КонвертацияСвязанная");
КонецФункции
&НаСервереБезКонтекста
Процедура ОбособитьКонвертациюНаСервере(ВариантРаботы, Конвертация, МассивКонвертаций)
	Запрос = Новый Запрос;
	Если ВариантРаботы = "Единичный" Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставНаша.ЭлементКонвертации КАК ЭлементКонвертации,
		|	СоставНаша.Ссылка КАК СоставСсылка
		|ИЗ Справочник.СоставыКонвертаций КАК СоставНаша
		|СОЕДИНЕНИЕ Справочник.СоставыКонвертаций КАК СоставЧужая
		|ПО СоставНаша.Владелец <> СоставЧужая.Владелец
		|	И СоставНаша.ЭлементКонвертации = СоставЧужая.ЭлементКонвертации
		|	И НЕ СоставЧужая.Отключить И НЕ СоставЧужая.ПометкаУдаления
		|ГДЕ СоставНаша.Владелец = &ТекКонвертация И НЕ СоставНаша.Отключить
		|	И НЕ СоставНаша.ПометкаУдаления
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.Алгоритмы.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииОбъектов.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаОбработкиДанных.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииПредопределенныхДанных.ПустаяСсылка)";
		Запрос.УстановитьПараметр("ТекКонвертация", Конвертация);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			// Создаем копию элемента до изменения.
			ЭлементКонвертацииОбъект = Выборка.ЭлементКонвертации.Скопировать();
			ЭлементКонвертацииОбъект.Записать();
			// Меняем состав конвертации.
			СоставКонвертацийОбъект = Выборка.СоставСсылка.ПолучитьОбъект();
			СоставКонвертацийОбъект.ЭлементКонвертации = ЭлементКонвертацииОбъект.Ссылка;
			СоставКонвертацийОбъект.Записать();
		КонецЦикла;

	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставНаша.ЭлементКонвертации КАК ЭлементКонвертации,
		|	СоставНаша.Ссылка КАК СоставСсылка
		|ИЗ Справочник.СоставыКонвертаций КАК СоставНаша
		|СОЕДИНЕНИЕ Справочник.СоставыКонвертаций КАК СоставЧужая
		|ПО СоставНаша.Владелец <> СоставЧужая.Владелец
		|	И СоставНаша.ЭлементКонвертации = СоставЧужая.ЭлементКонвертации
		|	И НЕ СоставЧужая.Отключить И НЕ СоставЧужая.ПометкаУдаления
		|ГДЕ СоставНаша.Владелец В (&МассивКонвертаций) И НЕ СоставНаша.Отключить
		|	И НЕ СоставЧужая.Владелец В (&МассивКонвертаций)
		|	И НЕ СоставНаша.ПометкаУдаления
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.Алгоритмы.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииОбъектов.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаОбработкиДанных.ПустаяСсылка)
		|	И СоставНаша.ЭлементКонвертации <> ЗНАЧЕНИЕ(Справочник.ПравилаКонвертацииПредопределенныхДанных.ПустаяСсылка)
		|ИТОГИ ПО СоставНаша.ЭлементКонвертации";
		Запрос.УстановитьПараметр("МассивКонвертаций", МассивКонвертаций);
		ВыборкаЭлементКонвертации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЭлементКонвертации.Следующий() Цикл
			// Создаем копию элемента до изменения.
			ЭлементКонвертацииОбъект = ВыборкаЭлементКонвертации.ЭлементКонвертации.Скопировать();
			ЭлементКонвертацииОбъект.Записать();
			Выборка = ВыборкаЭлементКонвертации.Выбрать();
			Пока Выборка.Следующий() Цикл
				// Меняем состав конвертации.
				СоставКонвертацийОбъект = Выборка.СоставСсылка.ПолучитьОбъект();
				СоставКонвертацийОбъект.ЭлементКонвертации = ЭлементКонвертацииОбъект.Ссылка;
				СоставКонвертацийОбъект.Записать();
			КонецЦикла;
		КонецЦикла;
	КонецЕсли
КонецПроцедуры


#КонецОбласти

