#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВыполнитьУдаление(Команда)
	ВыполнитьНаСервере();
КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ВыполнитьНаСервере()
	ЗапросВТ = Новый Запрос;
	ТекстПодзапрос = "
	|ВЫБРАТЬ
	|	Спр.Ссылка КАК Ссылка,
	|	Спр.ПометкаУдаления КАК ПометкаУдаления,
	|	МИНИМУМ(ВЫБОР КОГДА СоставПрочий.Ссылка ЕСТЬ NULL ТОГДА ИСТИНА 
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК Одиночное
	|ПОМЕСТИТЬ %ИмяВТ%
	|ИЗ Справочник.%ИмяСпр% КАК Спр
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТекСоставКонвертации
	|ПО ТекСоставКонвертации.ЭлементКонвертации = Спр.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.СоставыКонвертаций КАК СоставПрочий
	|ПО СоставПрочий.Владелец <> &Конвертация
	|	И СоставПрочий.ЭлементКонвертации = Спр.Ссылка
	|	И СоставПрочий.Отключить = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО Спр.Ссылка";

	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	ЗапросВТ.МенеджерВременныхТаблиц = МенеджерВТ;
	ТекстАлгоритмы = СтрЗаменить(ТекстПодзапрос, "%ИмяВТ%", "ТабАлгоритмы");
	ТекстАлгоритмы = СтрЗаменить(ТекстАлгоритмы, "%ИмяСпр%", "Алгоритмы");
	
	ТекстПКО = СтрЗаменить(ТекстПодзапрос, "%ИмяВТ%", "ТабПКО");
	ТекстПКО = СтрЗаменить(ТекстПКО, "%ИмяСпр%", "ПравилаКонвертацииОбъектов");

	ТекстПОД = СтрЗаменить(ТекстПодзапрос, "%ИмяВТ%", "ТабПОД");
	ТекстПОД = СтрЗаменить(ТекстПОД, "%ИмяСпр%", "ПравилаОбработкиДанных");
	
	ТекстПКПД = СтрЗаменить(ТекстПодзапрос, "%ИмяВТ%", "ТабПКПД");
	ТекстПКПД = СтрЗаменить(ТекстПКПД, "%ИмяСпр%", "ПравилаКонвертацииПредопределенныхДанных");
	
	ЗапросВТ.Текст = "
	|ВЫБРАТЬ
	|	Ссылка,
	|	ЭлементКонвертации
	|ПОМЕСТИТЬ ТекСоставКонвертации
	|ИЗ Справочник.СоставыКонвертаций
	|ГДЕ Владелец = &Конвертация
	|	И Отключить = ЛОЖЬ
	|;" + ТекстАлгоритмы + "
	|;" + ТекстПКО + "
	|;" + ТекстПОД + "
	|;" + ТекстПКПД;
	ЗапросВТ.УстановитьПараметр("Конвертация", Объект.Конвертация);
	// Заполнили временные таблицы
	ЗапросВТ.Выполнить();

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка
	|ИЗ Справочник.СоставыКонвертаций
	|ГДЕ Владелец = &Конвертация
	|	И (&РежимУдаления = ИСТИНА ИЛИ НЕ ПометкаУдаления)
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ ТабАлгоритмы
	|ГДЕ Одиночное
	|	И (&РежимУдаления = ИСТИНА ИЛИ НЕ ПометкаУдаления)
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ ТабПКО
	|ГДЕ Одиночное
	|	И (&РежимУдаления = ИСТИНА ИЛИ НЕ ПометкаУдаления)
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ ТабПОД
	|ГДЕ Одиночное
	|	И (&РежимУдаления = ИСТИНА ИЛИ НЕ ПометкаУдаления)
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ ТабПКПД
	|ГДЕ Одиночное
	|	И (&РежимУдаления = ИСТИНА ИЛИ НЕ ПометкаУдаления)
	|";
	Запрос.УстановитьПараметр("Конвертация", Объект.Конвертация);
	Запрос.УстановитьПараметр("РежимУдаления", Объект.НепосредственноеУдаление);
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоОбъектов = Выборка.Количество();
	БылиОшибки = Ложь;
	Пока Выборка.Следующий() Цикл
		ТекОбъект = Выборка.ссылка.ПолучитьОбъект();
		Попытка
			Если Объект.НепосредственноеУдаление Тогда
				ТекОбъект.Удалить();
			Иначе
				ТекОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
		Исключение
			ТекстОшибки = НСтр("ru='При удалении объекта'") +" " + Выборка.Ссылка + "(" + ТипЗнч(Выборка.Ссылка) + ") "
						+ НСтр("ru='возникла ошибка'")+":" + Символы.ПС + ОписаниеОшибки();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Выборка.Ссылка);
			БылиОшибки = Истина;
			КоличествоОбъектов = КоличествоОбъектов - 1;
		КонецПопытки;
	КонецЦикла;
	Если НЕ БылиОшибки Тогда
		ТекОбъект = Объект.Конвертация.ПолучитьОбъект();
		Попытка
			Если Объект.НепосредственноеУдаление Тогда
				ТекОбъект.Удалить();
			Иначе
				ТекОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			КоличествоОбъектов = КоличествоОбъектов + 1;
		Исключение
			ТекстОшибки = НСтр("ru='При удалении объекта'") +" " + Объект.Конвертация + "(" + ТипЗнч(Объект.Конвертация) + ") "
						+ НСтр("ru='возникла ошибка'")+":" + Символы.ПС + ОписаниеОшибки();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Выборка.Ссылка);
			БылиОшибки = Истина;
		КонецПопытки;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Удалено объектов'")+": " + КоличествоОбъектов);
	Если БылиОшибки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='В процессе удаления возникали ошибки'"));
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

