#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("парВерсияФормата") И ЗначениеЗаполнено(Параметры.парВерсияФормата) Тогда
		Объект.ВерсияФормата = Параметры.парВерсияФормата;
		СпособЗагрузки = 1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
	Объект.ИмяОсновногоПакетаXDTO = "http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.1";
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						=	"Файл данных (*.xsd)|*.xsd";
	ДиалогВыбораФайла.Заголовок						=	НСтр("ru='Выберите файлы со структурой формата'");
	ДиалогВыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогВыбораФайла.Расширение					=	"xsd";
	ДиалогВыбораФайла.ИндексФильтра					=	0;
	ДиалогВыбораФайла.ПолноеИмяФайла				=	Объект.ИмяФайлаЗагрузки;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	=	Истина;
	ДиалогВыбораФайла.МножественныйВыбор			=	Ложь;

	Оповещение = Новый ОписаниеОповещения("ЗавершениеВыбораФайлаЗагрузки", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(Оповещение);
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.ИмяФайлаЗагрузки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не выбран файл со структурой формата'"));
		Возврат;
	КонецЕсли;
	Если СокрЛП(Объект.ИмяОсновногоПакетаXDTO) = "" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не удалось определить имя основного пакета XDTO'"));
		Возврат;
	КонецЕсли;
	
	Если СпособЗагрузки = 1 И НЕ ЗначениеЗаполнено(Объект.ВерсияФормата) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не обнаружен формат для загрузки структуры'"));
		Возврат;
	КонецЕсли;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Ожидание;
	ИзменитьДоступностьЭлементовФормы(Ложь);
	ПодключитьОбработчикОжидания("ЗапускОбработки", 5, Истина);

КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ЗапускОбработки()
	АдресВременногоХранения = Неопределено;
	ДополнительныеПараметры = Новый Структура("ПроверятьФайл", Ложь);
	Оповещение = Новый ОписаниеОповещения("ПередачаФайлаНаСерверЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	НачатьПомещениеФайла(Оповещение, , АдресФайлаНаКлиенте, Ложь, ЭтаФорма.УникальныйИдентификатор);
	ВыполнитьЗагрузкуСервер(СпособЗагрузки, АдресВременногоХранения);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияДлительнойОперации", 5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияДлительнойОперации()
	Если НЕ ДлительнаяОперация Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Основная;
		ИзменитьДоступностьЭлементовФормы(Истина);
		Возврат;
	КонецЕсли;
	Если ДлительнаяОперацияВыполнена() Тогда
		ДлительнаяОперация = Ложь;
		ПодключитьОбработчикОжидания("ОкончаниеЗагрузкиФормата", 1, Истина);
	Иначе
		ПодключитьОбработчикОжидания("ОбработчикОжиданияДлительнойОперации", 5, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеЗагрузкиФормата()
	РезультатЗагрузки = ПолучитьИзВременногоХранилища(АдресХранилищаРезультата);
	Если РезультатЗагрузки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Загрузка структуры формата выполнена успешно'"));
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Загрузка структуры формата не выполнена'"));
	КонецЕсли;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Основная;
	ИзменитьДоступностьЭлементовФормы(Истина);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	ЗагружатьВФормат = (СпособЗагрузки = 1);
	Элементы.ДобавлятьТолькоНовыеОбъектыСвойстваЗначения.Видимость = ЗагружатьВФормат;
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВыбораФайлаЗагрузки(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	ИначеЕсли ВыбранныеФайлы.Количество() <> 1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо выбрать один файл, содержащий структуру формата.'"));
		Возврат;
	КонецЕсли;
	АдресФайлаНаКлиенте = Неопределено;
	Объект.ИмяФайлаЗагрузки = "";
	РезультатАнализаФайлов = "";
	Объект.ИмяОсновногоПакетаXDTO = "";
	ТекФайл = ВыбранныеФайлы[0];
	Объект.ИмяФайлаЗагрузки = ТекФайл;
	АдресФайлаНаКлиенте = ТекФайл;
	ДополнительныеПараметры = Новый Структура("ПроверятьФайл", Истина);
	Оповещение = Новый ОписаниеОповещения("ПередачаФайлаНаСерверЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	НачатьПомещениеФайла(Оповещение, , ТекФайл, Ложь, ЭтаФорма.УникальныйИдентификатор);
	Если РезультатАнализаФайлов = "" Тогда
		РезультатАнализаФайлов = НСтр("ru = 'Ошибка чтения структуры формата: не обнаружен основной пакет XDTO'");
	КонецЕсли;
	УстановитьВидимость();
	ОбновитьОтображениеДанных();

КонецПроцедуры

&НаКлиенте
Процедура ПередачаФайлаНаСерверЗавершение(Знач Успешно, Знач Адрес, Знач ВыбранноеИмяФайла, Знач ДополнительныеПараметры) Экспорт
	Если Успешно Тогда
		Если ДополнительныеПараметры.ПроверятьФайл Тогда
			ПроверитьЗагруженныйФайл(Адрес);
		Иначе
			АдресВременногоХранения = Адрес;
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Ошибка передачи файла структуры формата на сервер'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Объект.ИмяФайлаЗагрузки");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступностьЭлементовФормы(ФлагДоступность)
	Элементы.ФормаВыполнитьЗагрузку.Доступность = ФлагДоступность;
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗагруженныйФайл(Адрес)
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	ДанныеФайла = Новый ЧтениеXML;
	ДанныеФайла.ОткрытьФайл(ИмяВременногоФайла);
	ЭтоОсновнаяСхема = Ложь;
	ТекИмяПакета = "";
	ДанныеФайла.Прочитать();

	Если ДанныеФайла.Имя = "xs:schema" Тогда
		Пока ДанныеФайла.ПрочитатьАтрибут() Цикл
			Если ДанныеФайла.Имя = "targetNamespace" Тогда
				ТекИмяПакета = ДанныеФайла.Значение;
			КонецЕсли;
		КонецЦикла;
		ДанныеФайла.Прочитать();
		Если ДанныеФайла.Имя = "xs:import" Тогда
			// Это основной пакет
			Объект.ИмяОсновногоПакетаXDTO = ТекИмяПакета;
		КонецЕсли;
	КонецЕсли;
	НомерВерсииФормата = ВыделитьНомерВерсииФормата();
	Объект.ВерсияФормата = Справочники.ВерсииФормата.НайтиПоНаименованию(НомерВерсииФормата);
	Если ЗначениеЗаполнено(Объект.ВерсияФормата) Тогда
		СпособЗагрузки = 1;
		РезультатАнализаФайлов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Будет обновлена версия формата %1'"), НомерВерсииФормата);
	Иначе
		СпособЗагрузки = 0;
		РезультатАнализаФайлов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Будет создана новая версия формата %1'"), НомерВерсииФормата);
	КонецЕсли;
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ВыделитьНомерВерсииФормата()
	НомерВерсии = "";
	ДлинаСтрокиПакета = СтрДлина(СокрЛП(Объект.ИмяОсновногоПакетаXDTO));
	Для НомерПозиции = 1 По ДлинаСтрокиПакета Цикл
		ТекСимвол = Сред(СокрЛП(Объект.ИмяОсновногоПакетаXDTO), ДлинаСтрокиПакета - НомерПозиции + 1, 1);
		Если ТекСимвол = "/" Тогда
			НомерВерсии = Прав(СокрЛП(Объект.ИмяОсновногоПакетаXDTO), НомерПозиции-1);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат НомерВерсии;
КонецФункции

&НаСервере
Функция ДлительнаяОперацияВыполнена()
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
КонецФункции

&НаСервере
Процедура ВыполнитьЗагрузкуСервер(СпособЗагрузки, АдресВременногоХранения)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранения);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ИдентификаторЗадания = Неопределено;
	ДлительнаяОперация = Ложь;
	АдресХранилищаРезультата = Неопределено;
	СтруктураПараметров = Новый Структура("СпособЗагрузки, ВерсияФормата, ДобавлятьТолькоНовые",
						СпособЗагрузки, Объект.ВерсияФормата, Объект.ДобавлятьТолькоНовыеОбъектыСвойстваЗначения);
	СтруктураПараметров.Вставить("ФайлНаСервере", ИмяВременногоФайла);
	СтруктураПараметров.Вставить("ИмяОсновногоПакетаXDTO", Объект.ИмяОсновногоПакетаXDTO);
	Попытка
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"Обработки.ЗагрузкаСтруктурыФормата.ВыполнитьЗагрузкуФормата",
			СтруктураПараметров,
			НСтр("ru = 'Загрузка структуры формата'"));
		АдресХранилищаРезультата = Результат.АдресХранилища;
		Если Результат.ЗаданиеВыполнено Тогда
			РезультатЗагрузки = ПолучитьИзВременногоХранилища(АдресХранилищаРезультата);
			Если РезультатЗагрузки Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Загрузка структуры формата выполнена успешно'"));
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Загрузка структуры формата не выполнена'"));
			КонецЕсли;
		Иначе
			ДлительнаяОперация = Истина;
			ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'При загрузке структуры формата произошла ошибка'") + Символы.ПС + ОписаниеОшибки());
		Возврат;
	КонецПопытки
КонецПроцедуры
#КонецОбласти


