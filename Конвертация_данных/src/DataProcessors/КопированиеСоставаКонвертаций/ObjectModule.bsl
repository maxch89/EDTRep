#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс
// Заполняет состав конвертации-получателя на основании конвертации-источника
Процедура ЗаполнитьСоставКонвертации() Экспорт
	#Область ОбработкаПравилОбработкиДанных
	Если ОбрабатыватьПОД Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	Правила.Ссылка КАК ЭлементКонвертации
		|ПОМЕСТИТЬ СоставКонвертации
		|ИЗ Справочник.ПравилаОбработкиДанных КАК Правила
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставКонвертации
		|		ПО СоставКонвертации.Владелец = &КонвертацияИсточник
		|		И СоставКонвертации.ЭлементКонвертации = Правила.Ссылка
		|		И СоставКонвертации.Отключить = ЛОЖЬ
		|ГДЕ
		|	Правила.Отключить = ЛОЖЬ И Правила.ПометкаУдаления = ЛОЖЬ
		|;
		|ВЫБРАТЬ
		|	СоставКДобавлению.ЭлементКонвертации,
		|	&КонвертацияПолучатель КАК Конвертация
		|ИЗ СоставКонвертации КАК СоставКДобавлению
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставТекущий
		|ПО СоставТекущий.ЭлементКонвертации = СоставКДобавлению.ЭлементКонвертации
		|	И СоставТекущий.Владелец = &КонвертацияПолучатель
		|ГДЕ СоставТекущий.Отключить IS NULL";
		Запрос.УстановитьПараметр("КонвертацияИсточник", КонвертацияИсточник);
		Запрос.УстановитьПараметр("КонвертацияПолучатель", КонвертацияПолучатель);
		Запрос.УстановитьПараметр("КонфигурацияПолучатель", КонвертацияПолучатель.Конфигурация);


		Выборка = Запрос.Выполнить().Выбрать();
		ОбработатьВыборкуДанных(Выборка);
	КонецЕсли;
	#КонецОбласти
	#Область ОбработкаПравилКонвертацииОбъектов
	Если ОбрабатыватьПКО Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	Правила.Ссылка КАК ЭлементКонвертации
		|ПОМЕСТИТЬ СоставКонвертации
		|ИЗ Справочник.ПравилаКонвертацииОбъектов КАК Правила
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставКонвертации
		|		ПО СоставКонвертации.Владелец = &КонвертацияИсточник
		|		И СоставКонвертации.ЭлементКонвертации = Правила.Ссылка
		|		И СоставКонвертации.Отключить = ЛОЖЬ
		|ГДЕ
		|	Правила.Отключить = ЛОЖЬ И Правила.ПометкаУдаления = ЛОЖЬ
		|;
		|ВЫБРАТЬ
		|	СоставКДобавлению.ЭлементКонвертации,
		|	&КонвертацияПолучатель КАК Конвертация
		|ИЗ СоставКонвертации КАК СоставКДобавлению
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставТекущий
		|ПО СоставТекущий.ЭлементКонвертации = СоставКДобавлению.ЭлементКонвертации
		|	И СоставТекущий.Владелец = &КонвертацияПолучатель
		|ГДЕ СоставТекущий.Отключить IS NULL";
		Запрос.УстановитьПараметр("КонвертацияИсточник", КонвертацияИсточник);
		Запрос.УстановитьПараметр("КонвертацияПолучатель", КонвертацияПолучатель);
		Запрос.УстановитьПараметр("КонфигурацияПолучатель", КонвертацияПолучатель.Конфигурация);
		Выборка = Запрос.Выполнить().Выбрать();
		ОбработатьВыборкуДанных(Выборка);

	КонецЕсли;
	#КонецОбласти
	#Область ОбработкаПравилКонвертацииПредопределенныхДанных
	Если ОбрабатыватьПКПД Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	Правила.Ссылка КАК ЭлементКонвертации
		|ПОМЕСТИТЬ СоставКонвертации
		|ИЗ Справочник.ПравилаКонвертацииПредопределенныхДанных КАК Правила
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставКонвертации
		|		ПО СоставКонвертации.Владелец = &КонвертацияИсточник
		|		И СоставКонвертации.ЭлементКонвертации = Правила.Ссылка
		|		И СоставКонвертации.Отключить = ЛОЖЬ 
		|ГДЕ 
		|	Правила.ПометкаУдаления = ЛОЖЬ
		|;
		|ВЫБРАТЬ
		|	СоставКДобавлению.ЭлементКонвертации,
		|	&КонвертацияПолучатель КАК Конвертация
		|ИЗ СоставКонвертации КАК СоставКДобавлению
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставТекущий
		|ПО СоставТекущий.ЭлементКонвертации = СоставКДобавлению.ЭлементКонвертации
		|	И СоставТекущий.Владелец = &КонвертацияПолучатель
		|ГДЕ СоставТекущий.Отключить IS NULL";
		Запрос.УстановитьПараметр("КонвертацияИсточник", КонвертацияИсточник);
		Запрос.УстановитьПараметр("КонвертацияПолучатель", КонвертацияПолучатель);
		Запрос.УстановитьПараметр("КонфигурацияПолучатель", КонвертацияПолучатель.Конфигурация);
		Выборка = Запрос.Выполнить().Выбрать();
		ОбработатьВыборкуДанных(Выборка);

	КонецЕсли;
	#КонецОбласти
	#Область ОбработкаАлгоритмов
	Если ОбрабатыватьАлгоритмы Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	Правила.Ссылка КАК ЭлементКонвертации,
		|	&КонвертацияПолучатель КАК Конвертация
		|ИЗ Справочник.Алгоритмы КАК Правила
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставТекущий
		|ПО Правила.Ссылка = СоставТекущий.ЭлементКонвертации
		|	И СоставТекущий.Владелец = &КонвертацияПолучатель
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК СоставКонвертации
		|		ПО СоставКонвертации.Владелец = &КонвертацияИсточник
		|		И СоставКонвертации.ЭлементКонвертации = Правила.Ссылка
		|ГДЕ СоставКонвертации.Отключить = ЛОЖЬ 
		|	И Правила.ПометкаУдаления = ЛОЖЬ
		|	И СоставТекущий.Отключить IS NULL";
		Запрос.УстановитьПараметр("КонвертацияИсточник", КонвертацияИсточник);
		Запрос.УстановитьПараметр("КонвертацияПолучатель", КонвертацияПолучатель);
		
		Выборка = Запрос.Выполнить().Выбрать();
		ОбработатьВыборкуДанных(Выборка);

	КонецЕсли;
	#КонецОбласти
КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции
Процедура ОбработатьВыборкуДанных(Выборка)
	Пока Выборка.Следующий() Цикл
		СправочникОбъект = Справочники.СоставыКонвертаций.СоздатьЭлемент();
		СправочникОбъект.Владелец = Выборка.Конвертация;
		СправочникОбъект.ЭлементКонвертации = Выборка.ЭлементКонвертации;
		СправочникОбъект.Записать();
	КонецЦикла;
КонецПроцедуры
#КонецОбласти
#КонецЕсли
