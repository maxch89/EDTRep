#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// Процедура формирует дерево значений как результат сравнения версий формата.
// Параметры:
//   СтруктураПараметров - Структура - Исходные параметры для формирования дерева
//   АдресВременногоХранилища - Произвольный - Адрес, по которому будет размещено дерево объектов.
Процедура ПолучитьДеревоОбъектовФормата(СтруктураПараметров, АдресВременногоХранилища) Экспорт
	ИнициализацияПеременных(СтруктураПараметров);
	
	Уровень0 = СтруктураПараметров.ДеревоФормата.Строки;
	Уровень0.Очистить();
	Если НЕ ЗначениеЗаполнено(СтруктураПараметров.ВерсияФормата) Тогда
		Возврат;
	КонецЕсли;
	
	// Общие.
	// Таблица для составных типов
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	""Тип"" КАК ОбъектНаименование,
	|	Ссылка.Наименование КАК Наименование,
	|	ТипФормата КАК СоставТипФормата
	|ИЗ Справочник.ТипыФормата.Состав
	|ГДЕ Ссылка.Владелец = &ВерсияФормата
	|	И Ссылка.СоставнойТип И Ссылка.ПометкаУдаления = ЛОЖЬ
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Ссылка.Владелец.Наименование КАК ОбъектНаименование,
	|	Ссылка.Наименование КАК Наименование,
	|	ТипФормата КАК СоставТипФормата
	|ИЗ Справочник.СвойстваФормата.Состав
	|ГДЕ Ссылка.Владелец.Владелец = &ВерсияФормата
	|	И Ссылка.СоставнойТип И Ссылка.ПометкаУдаления = ЛОЖЬ
	|";
	Запрос.УстановитьПараметр("ВерсияФормата", СтруктураПараметров.ВерсияФормата);
	ТаблицаСоставныхТипов = Запрос.Выполнить().Выгрузить();
	ТаблицаСоставныхТипов.Индексы.Добавить("ОбъектНаименование");
	ТаблицаСоставныхТипов.Индексы.Добавить("Наименование");
	
	СтруктураПараметров.Вставить("ТаблицаСоставныхТипов", ТаблицаСоставныхТипов);
	
	// Таблица для предопределенных значений свойств
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Владелец КАК СвойствоФормата,
	|	Наименование КАК Значение
	|ИЗ Справочник.ЗначенияФормата
	|ГДЕ Владелец ССЫЛКА Справочник.СвойстваФормата
	|	И Владелец.Владелец.Владелец = &ВерсияФормата
	|	И ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("ВерсияФормата", СтруктураПараметров.ВерсияФормата);
	ТаблицаПредопределенныхЗначений = Запрос.Выполнить().Выгрузить();
	ТаблицаПредопределенныхЗначений.Индексы.Добавить("СвойствоФормата");
	
	СтруктураПараметров.Вставить("ТаблицаПредопределенныхЗначений", ТаблицаПредопределенныхЗначений);
	
	// Перечисления.
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""Перечисления"" 			КАК Группа1,
	|	ЗначенияФормата.Владелец 	КАК Группа2,
	|	ЗначенияФормата.Владелец.Наименование КАК Группа2Сортировка,
	|	ЗначенияФормата.Владелец.Наименование КАК НаименованиеОбъекта,
	|	ЗначенияФормата.Ссылка 		КАК Группа3,
	|	ЛОЖЬ 						КАК  Обязательное,
	|	ЛОЖЬ 						КАК  ЭтоСоставнойТип,
	|	ИСТИНА 						КАК  ДоступноИзменение,
	|	ЗначенияФормата.Ссылка.Наименование	КАК Группа3Сортировка,
	|	""""						КАК ТипСвойстваСтрокой,
	|	NULL						КАК ТипОбщегоРеквизита,
	|	12							КАК КодКартинки_Группа,
	|	5 							КАК КодКартинки
	|ПОМЕСТИТЬ ТабПеречисления
	|ИЗ Справочник.ЗначенияФормата КАК ЗначенияФормата
	|ГДЕ ЗначенияФормата.Владелец.Владелец = &ВерсияФормата
	|	И НЕ ЗначенияФормата.ПометкаУдаления
	|	И НЕ ЗначенияФормата.Владелец.ПометкаУдаления
	|;
	|///////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ИЗ ТабПеречисления
	|УПОРЯДОЧИТЬ ПО Группа1 ВОЗР, Группа2Сортировка ВОЗР, Группа3Сортировка ВОЗР
	|ИТОГИ 
	|	МИНИМУМ(ДоступноИзменение),
	|	МИНИМУМ(ЭтоСоставнойТип),
	|	МИНИМУМ(КодКартинки_Группа),
	|	МИНИМУМ(Группа2Сортировка),
	|	МИНИМУМ(Группа3Сортировка)
	|ПО Группа1, Группа2";
	Запрос.УстановитьПараметр("ВерсияФормата", СтруктураПараметров.ВерсияФормата);
	РезультатЗапроса = Запрос.Выполнить();
	
	ЭлементУровня0 = Уровень0.Добавить();
	ЭлементУровня0.Элемент = "Общие";
	ЭлементУровня0.КодКартинки = 7;

	ОбработатьПлоскийЗапрос(РезультатЗапроса, ЭлементУровня0, СтруктураПараметров);
	// Общие ТЧ и группы общих свойств.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР 
	|		КОГДА ТипОбщегоРеквизита = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.ОбщаяТабличнаяЧасть) ТОГДА
	|			&ОбщиеТЧПредставление
	|	ИНАЧЕ	&ГруппыОбщихСвойствПредставление 
	|	КОНЕЦ 									КАК Группа1,
	|	ВЫБОР 
	|		КОГДА ТипОбщегоРеквизита = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.ОбщаяТабличнаяЧасть) ТОГДА
	|			1
	|	ИНАЧЕ	6 
	|	КОНЕЦ 									КАК КодКартинки_Группа,
	|	ОбъектыФормата.Ссылка 					КАК Группа2,
	|	ОбъектыФормата.Ссылка.Наименование		КАК Группа2Сортировка,
	|	ОбъектыФормата.Ссылка.Наименование		КАК НаименованиеОбъекта,
	|	СвойстваФормата.Ссылка 					КАК Группа3,
	|	СвойстваФормата.Обязательное			КАК Обязательное,
	|	ВЫБОР КОГДА СвойстваФормата.ЭтоГруппа ТОГДА
	|		ЛОЖЬ 		
	|	ИНАЧЕ СвойстваФормата.СоставнойТип КОНЕЦ	КАК ЭтоСоставнойТип,
	|	СвойстваФормата.Наименование 			КАК ИмяСоставногоТипа,
	|	ВЫБОР КОГДА СвойстваФормата.ОбъектХранительСвойств = """"
	|		И ( СвойстваФормата.Родитель = ЗНАЧЕНИЕ(Справочник.СвойстваФормата.ПустаяСсылка)
	|			ИЛИ СвойстваФормата.Родитель.ОбъектХранительСвойств = """"
	|			) ТОГДА
	|		ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 									КАК  ДоступноИзменение,
	|	СвойстваФормата.Порядок					КАК Группа3Сортировка,
	|	ВЫРАЗИТЬ(СвойстваФормата.Тип КАК Строка(1000))	КАК ТипСвойстваСтрокой,
	|	ОбъектыФормата.ТипОбщегоРеквизита		КАК ТипОбщегоРеквизита,
	|	5 										КАК КодКартинки
	|ИЗ Справочник.ОбъектыФормата КАК ОбъектыФормата
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваФормата КАК СвойстваФормата
	|ПО СвойстваФормата.Владелец = ОбъектыФормата.Ссылка
	|ГДЕ (ОбъектыФормата.ТипОбщегоРеквизита = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.ОбщаяТабличнаяЧасть)
	|	ИЛИ ОбъектыФормата.ТипОбщегоРеквизита = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.ГруппаОбщихСвойств))
	|	И ОбъектыФормата.Владелец = &ВерсияФормата
	|	И НЕ ОбъектыФормата.ПометкаУдаления
	|	И НЕ СвойстваФормата.ПометкаУдаления
	|	И ОбъектыФормата.Наименование НЕ В (&МассивИсключений)
	|УПОРЯДОЧИТЬ ПО Группа1 ВОЗР, Группа2Сортировка ВОЗР, Группа3Сортировка ВОЗР
	|ИТОГИ 
	|	МИНИМУМ(ДоступноИзменение),
	|	МИНИМУМ(ЭтоСоставнойТип),
	|	МИНИМУМ(ИмяСоставногоТипа),
	|	МИНИМУМ(ТипОбщегоРеквизита),
	|	МИНИМУМ(КодКартинки_Группа),
	|	МИНИМУМ(Группа2Сортировка),
	|	МИНИМУМ(Группа3Сортировка)
	|ПО Группа1, Группа2, Группа3 ИЕРАРХИЯ";
	МассивИсключений = Новый Массив();
	МассивИсключений.Добавить("УдалениеОбъекта");
	МассивИсключений.Добавить("ЛюбаяСсылка");
	МассивИсключений.Добавить("Info");
	Запрос.УстановитьПараметр("МассивИсключений", МассивИсключений);
	Запрос.УстановитьПараметр("ВерсияФормата", СтруктураПараметров.ВерсияФормата);
	Запрос.УстановитьПараметр("ОбщиеТЧПредставление", НСтр("ru = 'Общие табличные части'"));
	Запрос.УстановитьПараметр("ГруппыОбщихСвойствПредставление", НСтр("ru = 'Группы общих свойств'"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбработатьЗапросСИерархией(РезультатЗапроса, ЭлементУровня0, СтруктураПараметров);
	
	// Типы.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""Типы"" 					КАК Группа1,
	|	""Ссылочные"" 				КАК Группа2,
	|	""Ссылочные"" 				КАК Группа2Сортировка,
	|	Ссылка.Наименование			КАК НаименованиеОбъекта,
	|	Ссылка 						КАК Группа3,
	|	ЛОЖЬ 						КАК Обязательное,
	|	ЛОЖЬ 						КАК ЭтоСоставнойТип,
	|	"""" 						КАК ИмяСоставногоТипа,
	|	ИСТИНА 						КАК ДоступноИзменение,
	|	Ссылка.Наименование			КАК Группа3Сортировка,
	|	Ссылка.БазовыйТип			КАК ТипСвойстваСтрокой,
	|	NULL						КАК ТипОбщегоРеквизита,
	|	13							КАК КодКартинки_Группа,
	|	5 							КАК КодКартинки
	|ИЗ Справочник.ТипыФормата
	|ГДЕ Владелец = &ВерсияФормата И БазовыйТип = ""Ref""
	|	И СоставнойТип = ЛОЖЬ
	|	И НЕ ПометкаУдаления
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	""Типы"" 					КАК Группа1,
	|	""Составные"" 				КАК Группа2,
	|	""Составные"" 				КАК Группа2Сортировка,
	|	Ссылка.Наименование			КАК НаименованиеОбъекта,
	|	Ссылка 						КАК Группа3,
	|	ЛОЖЬ 						КАК Обязательное,
	|	ИСТИНА 						КАК ЭтоСоставнойТип,
	|	Ссылка.Наименование			КАК ИмяСоставногоТипа,
	|	ИСТИНА 						КАК ДоступноИзменение,
	|	Ссылка.Наименование			КАК Группа3Сортировка,
	|	""""						КАК ТипСвойстваСтрокой,
	|	NULL						КАК ТипОбщегоРеквизита,
	|	13							КАК КодКартинки_Группа,
	|	5 							КАК КодКартинки
	|ИЗ Справочник.ТипыФормата
	|ГДЕ Владелец = &ВерсияФормата 
	|	И СоставнойТип = ИСТИНА
	|	И НЕ ПометкаУдаления
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	""Типы"" 					КАК Группа1,
	|	""Простые"" 				КАК Группа2,
	|	""Простые"" 				КАК Группа2Сортировка,
	|	Ссылка.Наименование			КАК НаименованиеОбъекта,
	|	Ссылка 						КАК Группа3,
	|	ЛОЖЬ 						КАК Обязательное,
	|	ЛОЖЬ 						КАК ЭтоСоставнойТип,
	|	"""" 						КАК ИмяСоставногоТипа,
	|	ИСТИНА 						КАК ДоступноИзменение,
	|	Ссылка.Наименование			КАК Группа3Сортировка,
	|	Ссылка.БазовыйТип			КАК ТипСвойстваСтрокой,
	|	NULL						КАК ТипОбщегоРеквизита,
	|	13							КАК КодКартинки_Группа,
	|	5 							КАК КодКартинки
	|ИЗ Справочник.ТипыФормата
	|ГДЕ Владелец = &ВерсияФормата И БазовыйТип <> ""Ref""
	|	И СоставнойТип = ЛОЖЬ
	|	И Наименование НЕ В (ВЫБРАТЬ РАЗЛИЧНЫЕ НаименованиеОбъекта ИЗ ТабПеречисления)
	|	И Наименование НЕ В (&МассивИсключений)
	|	И НЕ ПометкаУдаления
	|УПОРЯДОЧИТЬ ПО Группа1 ВОЗР, Группа2Сортировка ВОЗР, Группа3Сортировка ВОЗР
	|ИТОГИ 
	|	МИНИМУМ(ДоступноИзменение),
	|	МИНИМУМ(КодКартинки_Группа),
	|	МИНИМУМ(Группа2Сортировка),
	|	МИНИМУМ(Группа3Сортировка)
	|ПО Группа1, Группа2";
	Запрос.УстановитьПараметр("ВерсияФормата", СтруктураПараметров.ВерсияФормата);
	Запрос.УстановитьПараметр("МассивИсключений", МассивИсключений);
	РезультатЗапроса = Запрос.Выполнить();
	ОбработатьПлоскийЗапрос(РезультатЗапроса, ЭлементУровня0, СтруктураПараметров);

	// Объекты формата.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР КОГДА ОбъектыФормата.Наименование ПОДОБНО ""Справочник%"" ТОГДА
	|		""Справочники""
	|	КОГДА ОбъектыФормата.Наименование ПОДОБНО ""Документ%"" ТОГДА
	|		""Документы""
	|	ИНАЧЕ ""Прочее"" КОНЕЦ  					КАК Группа1,
	|	ВЫБОР КОГДА ОбъектыФормата.Наименование ПОДОБНО ""Справочник%"" ТОГДА
	|		1
	|	КОГДА ОбъектыФормата.Наименование ПОДОБНО ""Документ%"" ТОГДА
	|		2
	|	ИНАЧЕ 3 КОНЕЦ  								КАК Группа1Сортировка,
	|	ВЫБОР КОГДА ОбъектыФормата.Наименование ПОДОБНО ""Справочник%"" ТОГДА
	|		8
	|	КОГДА ОбъектыФормата.Наименование ПОДОБНО ""Документ%"" ТОГДА
	|		11
	|	ИНАЧЕ 0 КОНЕЦ  								КАК КодКартинки_Группа,
	|	ОбъектыФормата.Ссылка 						КАК Группа2,
	|	ОбъектыФормата.Наименование					КАК Группа2Сортировка,
	|	СвойстваФормата.Ссылка 						КАК Группа3,
	|	СвойстваФормата.Порядок						КАК Группа3Порядок,
	|	СвойстваФормата.Наименование				КАК Группа3Сортировка,
	|	СвойстваФормата.Обязательное 				КАК Обязательное,
	|	ВЫБОР КОГДА СвойстваФормата.ЭтоГруппа ТОГДА
	|		ЛОЖЬ 		
	|	ИНАЧЕ СвойстваФормата.СоставнойТип КОНЕЦ	КАК ЭтоСоставнойТип,
	|	СвойстваФормата.Наименование 			КАК ИмяСоставногоТипа,
	|	ВЫБОР КОГДА СвойстваФормата.ОбъектХранительСвойств = """"
	|		И ( СвойстваФормата.Родитель = ЗНАЧЕНИЕ(Справочник.СвойстваФормата.ПустаяСсылка)
	|			ИЛИ СвойстваФормата.Родитель.ОбъектХранительСвойств = """"
	|			) ТОГДА
	|		ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 									КАК  ДоступноИзменение,
	|	ВЫРАЗИТЬ(СвойстваФормата.Тип КАК Строка(1000))	КАК ТипСвойстваСтрокой,
	|	ВЫБОР КОГДА СвойстваФормата.ЭтоГруппа ТОГДА
	|		СвойстваФормата.ТипОбщегоСвойства 	
	|	ИНАЧЕ
	|		СвойстваФормата.Родитель.ТипОбщегоСвойства 	
	|	КОНЕЦ										КАК ТипОбщегоРеквизита,
	|	ВЫБОР КОГДА 
	|		СвойстваФормата.Родитель.ТипОбщегоСвойства = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.КлючевыеСвойства)
	|		ТОГДА 3
	|		КОГДА СвойстваФормата.Родитель.ТипОбщегоСвойства = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.ГруппаОбщихСвойств)
	|			ИЛИ СвойстваФормата.Родитель.ТипОбщегоСвойства = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.ОбщаяТабличнаяЧасть)
	|		ТОГДА 9
	|	ИНАЧЕ 5 КОНЕЦ 								КАК КодКартинки
	|ИЗ 
	|	Справочник.ОбъектыФормата 					КАК ОбъектыФормата
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	Справочник.СвойстваФормата 					КАК СвойстваФормата
	|ПО СвойстваФормата.Владелец = ОбъектыФормата.Ссылка
	|	И НЕ СвойстваФормата.ПометкаУдаления
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	Справочник.ЗначенияФормата 					КАК ЗначенияФормата
	|ПО ЗначенияФормата.Владелец = ОбъектыФормата.Ссылка
	|ГДЕ ОбъектыФормата.ТипОбщегоРеквизита = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.ПустаяСсылка)
	|	И ОбъектыФормата.Владелец = &ВерсияФормата
	|	И ЗначенияФормата.Ссылка IS NULL
	|	И НЕ ОбъектыФормата.ПометкаУдаления
	|УПОРЯДОЧИТЬ ПО Группа1Сортировка ВОЗР, Группа2Сортировка ВОЗР, Группа3Порядок ВОЗР, Группа3Сортировка ВОЗР
	|ИТОГИ Минимум(КодКартинки_Группа), Минимум(ДоступноИзменение), 
	|	Минимум(ЭтоСоставнойТип), Минимум(ИмяСоставногоТипа)
	|ПО Группа1, Группа2, Группа3 ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("ВерсияФормата", СтруктураПараметров.ВерсияФормата);
	РезультатЗапроса = Запрос.Выполнить();
	ОбработатьЗапросСИерархией(РезультатЗапроса, СтруктураПараметров.ДеревоФормата, СтруктураПараметров);
	
	Результат = Новый Структура("ДеревоФормата, ТаблицаДляПоискаПоДереву", СтруктураПараметров.ДеревоФормата, СтруктураПараметров.ТаблицаДляПоискаПоДереву);
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);

КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции
Процедура ИнициализацияПеременных(СтруктураПараметров)
	ТаблицаДляПоискаПоДереву = Новый ТаблицаЗначений;
	ТаблицаДляПоискаПоДереву.Колонки.Добавить("Элемент");
	ТаблицаДляПоискаПоДереву.Колонки.Добавить("Идентификатор");
	СтруктураПараметров.Вставить("ТаблицаДляПоискаПоДереву", ТаблицаДляПоискаПоДереву);

	ДеревоФормата = Новый ДеревоЗначений;
	ТипСтрока = Новый ОписаниеТипов("Строка");
	ТипБулево = Новый ОписаниеТипов("Булево");
	ДеревоФормата.Колонки.Добавить("КодКартинки");
	ДеревоФормата.Колонки.Добавить("Элемент");
	ДеревоФормата.Колонки.Добавить("Обязательное", ТипБулево);
	ДеревоФормата.Колонки.Добавить("ТипСвойстваСтрокой", ТипСтрока);
	ДеревоФормата.Колонки.Добавить("ТипОбщегоРеквизита");
	ДеревоФормата.Колонки.Добавить("ТипЭтоСсылка", ТипБулево);
	ДеревоФормата.Колонки.Добавить("ДоступноИзменение", ТипБулево);
	ДеревоФормата.Колонки.Добавить("ТипСвойстваМассив");
	ДеревоФормата.Колонки.Добавить("ПредопределенныеЗначенияМассив");

	СтруктураПараметров.Вставить("ДеревоФормата", ДеревоФормата);

КонецПроцедуры


Процедура ОбработатьВыборкуПоИерархии(ТекущаяВыборка, УровеньИерархии, ТекущаяВеткаДерева, СтруктураПараметров)
	ВыборкаПоИерархии = ТекущаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Группа3");
	Пока ВыборкаПоИерархии.Следующий() Цикл
		Если ВыборкаПоИерархии.Группа3 = ТекущаяВыборка.Группа3 Тогда
			Продолжить;
		КонецЕсли;
		ЭлементИерархии = ДобавитьВеткуДерева(ТекущаяВеткаДерева, ВыборкаПоИерархии.Группа3, СтруктураПараметров, ВыборкаПоИерархии, Истина);
		Если ВыборкаПоИерархии.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			// Корректируем часть свойств для группировки.
			ЭлементИерархии.ДоступноИзменение = Истина;
			Если ВыборкаПоИерархии.ТипОбщегоРеквизита = Перечисления.ТипыОбщихРеквизитов.ОбщаяТабличнаяЧасть Тогда
				ЭлементИерархии.КодКартинки = 2;
			ИначеЕсли ВыборкаПоИерархии.ТипОбщегоРеквизита = Перечисления.ТипыОбщихРеквизитов.ГруппаОбщихСвойств Тогда
				ЭлементИерархии.КодКартинки = 10;
			ИначеЕсли ВыборкаПоИерархии.ТипОбщегоРеквизита = Перечисления.ТипыОбщихРеквизитов.КлючевыеСвойства Тогда
				ЭлементИерархии.КодКартинки = 4;
			Иначе
				ЭлементИерархии.КодКартинки = 1;
			КонецЕсли;
			УровеньИерархии = УровеньИерархии + 1;
			ОбработатьВыборкуПоИерархии(ВыборкаПоИерархии, УровеньИерархии, ЭлементИерархии, СтруктураПараметров);
		Иначе
			Если ЭлементИерархии.КодКартинки = 0 Тогда
				ЭлементИерархии.КодКартинки = 5;
			КонецЕсли;
			Выборка = ВыборкаПоИерархии.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока Выборка.Следующий() Цикл
				Если Выборка.Группа3 = ВыборкаПоИерархии.Группа3 Тогда
					Продолжить;
				КонецЕсли;
				ЭлементКонечный = ДобавитьВеткуДерева(ТекущаяВеткаДерева, Выборка.Группа3, СтруктураПараметров, Выборка, Истина);
				Если ЭлементКонечный.КодКартинки = 0 Тогда
					ЭлементКонечный.КодКартинки = 5;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработатьПлоскийЗапрос(РезультатЗапроса, ВерхняяВетка, СтруктураПараметров)
	ВыборкаГруппа1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаГруппа1.Следующий() Цикл
		ЭлементУровня1 = ДобавитьВеткуДерева(ВерхняяВетка, ВыборкаГруппа1.Группа1,СтруктураПараметров);
		ЭлементУровня1.КодКартинки = ВыборкаГруппа1.КодКартинки_Группа;
		ВыборкаГруппа2 = ВыборкаГруппа1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаГруппа2.Следующий() Цикл
			ЭлементУровня2 = ДобавитьВеткуДерева(ЭлементУровня1, ВыборкаГруппа2.Группа2, СтруктураПараметров,ВыборкаГруппа2, Истина);
			ЭлементУровня2.КодКартинки = ВыборкаГруппа2.КодКартинки_Группа;
			ВыборкаГруппа3 = ВыборкаГруппа2.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаГруппа3.Следующий() Цикл
				ЭлементУровня3 = ДобавитьВеткуДерева(ЭлементУровня2, ВыборкаГруппа3.Группа3, СтруктураПараметров, ВыборкаГруппа3, Истина);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработатьЗапросСИерархией(РезультатЗапроса, ВерхняяВетка, СтруктураПараметров)
	ВыборкаГруппа1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаГруппа1.Следующий() Цикл
		ЭлементУровня1 = ДобавитьВеткуДерева(ВерхняяВетка, ВыборкаГруппа1.Группа1, СтруктураПараметров);
		ЭлементУровня1.КодКартинки = ВыборкаГруппа1.КодКартинки_Группа;
		ВыборкаГруппа2 = ВыборкаГруппа1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаГруппа2.Следующий() Цикл
			ЭлементУровня2 = ДобавитьВеткуДерева(ЭлементУровня1, ВыборкаГруппа2.Группа2,СтруктураПараметров,,Истина);
			ЭлементУровня2.КодКартинки = ВыборкаГруппа2.КодКартинки_Группа;
			ЭлементУровня2.ТипОбщегоРеквизита = ВыборкаГруппа2.ТипОбщегоРеквизита;
			ЭлементУровня2.ДоступноИзменение = ВыборкаГруппа2.ДоступноИзменение;
			ОбработатьВыборкуПоИерархии(ВыборкаГруппа2, 1, ЭлементУровня2, СтруктураПараметров);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ДобавитьВеткуДерева(ВышестоящийУровень, ТекЭлемент, СтруктураПараметров, СтрокаВыборки = Неопределено, ДополнятьТаблицуПоиска = Ложь)
	ТекущийУровень = ВышестоящийУровень.Строки;
	ЭлементУровня = ТекущийУровень.Добавить();
	ЭлементУровня.Элемент = ТекЭлемент;
	ЭлементУровня.КодКартинки = 0;
	ЭлементУровня.ТипЭтоСсылка = Ложь;
	ЭлементУровня.Обязательное = Ложь;
	ЭлементУровня.ДоступноИзменение = Ложь;
	Если СтрокаВыборки <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭлементУровня, СтрокаВыборки, "ТипОбщегоРеквизита, ТипСвойстваСтрокой, Обязательное, КодКартинки, ДоступноИзменение");
		
		Если Лев(СтрокаВыборки.ТипСвойстваСтрокой,16) = "КлючевыеСвойства" Тогда
			ЭлементУровня.ТипЭтоСсылка = Истина;
		Иначе
			ЭлементУровня.ТипЭтоСсылка = ЗначениеЗаполнено(Справочники.ТипыФормата.НайтиПоНаименованию(СтрокаВыборки.ТипСвойстваСтрокой, Истина,,СтруктураПараметров.ВерсияФормата))
										ИЛИ ЗначениеЗаполнено(Справочники.ОбъектыФормата.НайтиПоНаименованию(СтрокаВыборки.ТипСвойстваСтрокой, Истина,,СтруктураПараметров.ВерсияФормата));
		КонецЕсли;
		Если СтрокаВыборки.ЭтоСоставнойТип = Истина Тогда
			СтруктураПоиска = Новый Структура("Наименование", СтрокаВыборки.ИмяСоставногоТипа);
			Если ТипЗнч(ТекЭлемент) = Тип("СправочникСсылка.ТипыФормата") Тогда
				СтруктураПоиска.Вставить("ОбъектНаименование", "Тип");
			Иначе
				// Свойства формата
				СтруктураПоиска.Вставить("ОбъектНаименование", ТекЭлемент.Владелец.Наименование);
			КонецЕсли;
			НайденныеСтроки = СтруктураПараметров.ТаблицаСоставныхТипов.НайтиСтроки(СтруктураПоиска);
			Если ЭлементУровня.ТипСвойстваМассив = Неопределено Тогда
				ЭлементУровня.ТипСвойстваМассив = Новый СписокЗначений;
			Иначе
				ЭлементУровня.ТипСвойстваМассив.Очистить();
			КонецЕсли;
			Для Каждого ТекСтр Из НайденныеСтроки Цикл
				ЭлементУровня.ТипСвойстваМассив.Добавить(ТекСтр.СоставТипФормата);
			КонецЦикла;
		КонецЕсли;
		// Возможно есть предопределенные значения
		МассивПредопределенных = Новый СписокЗначений;
		Если НЕ ЭлементУровня.ТипЭтоСсылка 
			И ТипЗнч(ТекЭлемент) = Тип("СправочникСсылка.СвойстваФормата")
			И ЗначениеЗаполнено(ТекЭлемент) Тогда
			НайденныеСтроки = СтруктураПараметров.ТаблицаПредопределенныхЗначений.НайтиСтроки(Новый Структура("СвойствоФормата", ТекЭлемент));
			Для Каждого ТекСтр Из НайденныеСтроки Цикл
				МассивПредопределенных.Добавить(ТекСтр.Значение);
			КонецЦикла;
		КонецЕсли;
		ЭлементУровня.ПредопределенныеЗначенияМассив = МассивПредопределенных;
	КонецЕсли;
	Если ДополнятьТаблицуПоиска Тогда
		Если ТипЗнч(ТекЭлемент) = Тип("СправочникСсылка.ТипыФормата")
			ИЛИ ТипЗнч(ТекЭлемент) = Тип("СправочникСсылка.ОбъектыФормата")
			ИЛИ ТипЗнч(ТекЭлемент) = Тип("СправочникСсылка.СвойстваФормата") Тогда
			СтрокаТаблицы = СтруктураПараметров.ТаблицаДляПоискаПоДереву.Добавить();
			СтрокаТаблицы.Элемент = ТекЭлемент;
		КонецЕсли;
	КонецЕсли;
	Возврат ЭлементУровня;
КонецФункции

#КонецОбласти
#КонецЕсли