#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("парКонвертация") Тогда
		Объект.Конвертация = Параметры.парКонвертация;
		НаименованиеКонвертации = Объект.Конвертация.Наименование;
	КонецЕсли;
	Заголовок = Объект.Конвертация;
	ОбновитьПараметрыСписков();
	ОбновитьПараметрыСписков_ГруппыПравил();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ПКО;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗагрузкаАлгоритмов" Тогда
		Если Параметр.Отказ = Ложь 
			И Параметр.ИдентификаторФормы = ЭтаФорма.УникальныйИдентификатор Тогда
			ЗагрузкаОбработчиковНаСервере(ДанныеБуфера);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонвертацияПриИзменении(Элемент)
	ОбновитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ПодключитьОбработчикОжидания("ГруппыПравилПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПравилаКонвертацииПредопределенныхДанныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	ОткрытьФормуСправочника("ПравилаКонвертацииПредопределенныхДанных", Отказ, Копирование, Группа);
КонецПроцедуры

&НаКлиенте
Процедура ПравилаКонвертацииОбъектовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	ОткрытьФормуСправочника("ПравилаКонвертацииОбъектов", Отказ, Копирование, Группа);
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОбработкиДанныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	ОткрытьФормуСправочника("ПравилаОбработкиДанных", Отказ, Копирование, Группа);
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПравилПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ГруппыПравилПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	ОткрытьФормуСправочника("Алгоритмы", Отказ, Копирование, Группа);
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьМодуль(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Конвертация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указана конвертация'"));
		Возврат;
	КонецЕсли;
	
	ТХ = СохранитьМодульСервер();
	КонвертацияДанныхXDTOКлиент.ВывестиТекстДляИспользования(ТХ);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьКонвертацию(Команда)
	
	ПараметрыФормы = Новый Структура("Ключ", Объект.Конвертация);
	ОткрытьФорму("Справочник.Конвертации.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаОбработчиковНаСервере(ТекстовыйДокумент)
	ОбработкаОбъект = Обработки.ЗагрузкаОбработчиков.Создать();
	ОбработкаОбъект.Конвертация = Объект.Конвертация;

	ОбработкаОбъект.РазобратьТекстМодуля(ТекстовыйДокумент);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаОбработчиков(Команда)
	КОбъект = Новый COMОбъект("htmlfile");
	ДанныеБуфера = КОбъект.ParentWindow.ClipboardData.Getdata("Text");
	// Результат проверки будет в обработке оповещения.
	КонвертацияДанныхXDTOКлиент.ПроверитьКонвертациюПриЗагрузкеАлгоритмов(ДанныеБуфера, Объект.Конвертация, 
									НаименованиеКонвертации, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ИмяСписка = "";
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ПОД Тогда
		ИмяСписка = "ПравилаОбработкиДанных";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ПКО Тогда
		ИмяСписка = "ПравилаКонвертацииОбъектов";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ПКПД Тогда
		ИмяСписка = "ПравилаКонвертацииПредопределенныхДанных";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаАлгоритмы Тогда
		ИмяСписка = "Алгоритмы";
	Иначе
		Возврат;
	КонецЕсли;
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы[ИмяСписка]);
КонецПроцедуры

#КонецОбласти
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПараметрыСписков()
	ПравилаОбработкиДанных.Параметры.УстановитьЗначениеПараметра("парКонвертация", Объект.Конвертация);
	Алгоритмы.Параметры.УстановитьЗначениеПараметра("парКонвертация", Объект.Конвертация);
	ПравилаКонвертацииОбъектов.Параметры.УстановитьЗначениеПараметра("парКонвертация", Объект.Конвертация);
	ПравилаКонвертацииПредопределенныхДанных.Параметры.УстановитьЗначениеПараметра("парКонвертация", Объект.Конвертация);
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыСписков_ГруппыПравил()
	НетОтбораПоГруппе = НЕ ЗначениеЗаполнено(ТекущаяГруппаПравил);
	ПравилаОбработкиДанных.Параметры.УстановитьЗначениеПараметра("парГруппа", ТекущаяГруппаПравил);
	ПравилаКонвертацииОбъектов.Параметры.УстановитьЗначениеПараметра("парГруппа", ТекущаяГруппаПравил);
	ПравилаОбработкиДанных.Параметры.УстановитьЗначениеПараметра("НетОтбораПоГруппе", НетОтбораПоГруппе);
	ПравилаКонвертацииОбъектов.Параметры.УстановитьЗначениеПараметра("НетОтбораПоГруппе", НетОтбораПоГруппе);
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФормуСправочника(ИмяСправочника, Отказ, Копирование, Группа)
	Если Группа ИЛИ Копирование Тогда
		Возврат;
	КонецЕсли;
	СтруктураПараметров = Новый Структура("Конвертация", Объект.Конвертация);
	Отказ = Истина;
	Если ИмяСправочника = "ПравилаОбработкиДанных" ИЛИ ИмяСправочника = "ПравилаКонвертацииОбъектов" Тогда
		СтруктураПараметров.Вставить("Группа", Элементы.ГруппыПравил.ТекущаяСтрока);
	КонецЕсли;
	
	ОткрытьФорму("Справочник."+ИмяСправочника+".Форма.ФормаЭлемента", СтруктураПараметров);

КонецПроцедуры

&НаСервере
Функция СохранитьМодульСервер()
	ВерсияФорматаМенеджера = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Конвертация, "ВерсияФорматаМенеджера"));
	Если ВерсияФорматаМенеджера = "1" Тогда
		ОбработкаОбъект = Обработки.ВыгрузкаМодуляВерсии1.Создать();
	Иначе
		ОбработкаОбъект = Обработки.ВыгрузкаМодуля.Создать();
	КонецЕсли;

	ОбработкаОбъект.Конвертация = Объект.Конвертация;
	Возврат ОбработкаОбъект.ВыполнитьВыгрузкуМодулей();
КонецФункции

&НаКлиенте
Процедура ГруппыПравилПриАктивизацииСтрокиОбработчикОжидания()
	Если ТекущаяГруппаПравил = Элементы.ГруппыПравил.ТекущаяСтрока
		И ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница.Имя Тогда
		Возврат;
	КонецЕсли;
	ТекущаяГруппаПравил = Элементы.ГруппыПравил.ТекущаяСтрока;
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница.Имя;
	ОбновитьПараметрыСписков_ГруппыПравил();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКПКО(Команда)
	Если Элементы.Страницы.ТекущаяСтраница <> Элементы.ПОД Тогда
		Возврат;
	КонецЕсли;
	ТекПОД = Элементы.ПравилаОбработкиДанных.ТекущаяСтрока;
	Если НЕ ЗначениеЗаполнено(ТекПОД) Тогда
		Возврат;
	КонецЕсли;
	ТекПКО = ПолучитьПКО(ТекПОД);
	Если НЕ ЗначениеЗаполнено(ТекПКО) Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ТекПКО) = Тип("Массив") Тогда
		ОткрытьФормуВыбораПКО(ТекПКО);
		Возврат;
	КонецЕсли;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ПКО;
	Элементы.ПравилаКонвертацииОбъектов.ТекущаяСтрока = ТекПКО;
КонецПроцедуры

&НаСервере
Функция ПолучитьПКО(ТекПОД)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", Объект.Конвертация);
	Запрос.УстановитьПараметр("ПОД", ТекПОД);
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПКО.Ссылка КАК Ссылка
		|ИЗ Справочник.ПравилаКонвертацииОбъектов КАК ПКО
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК Состав
		|ПО Состав.Владелец = &Конвертация
		|	И Состав.ЭлементКонвертации = ПКО.Ссылка
		|	И Состав.Отключить = ЛОЖЬ
		|ГДЕ ПКО.Код = &ИмяПКО";
	Если ЗначениеЗаполнено(ТекПОД.ПравилоКонвертацииОбъекта) Тогда
		Запрос.УстановитьПараметр("ИмяПКО", ТекПОД.ПравилоКонвертацииОбъекта);
	ИначеЕсли ТекПОД.ПравилаКонвертацииОбъектов.Количество() = 1 Тогда
		Запрос.УстановитьПараметр("ИмяПКО", ТекПОД.ПравилаКонвертацииОбъектов[0].ПравилоКонвертацииОбъекта);
	ИначеЕсли ТекПОД.ПравилаКонвертацииОбъектов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='В текущем правиле обработки данных не указано правило конвертации объекта'"));
		Возврат Неопределено;
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПКО.Ссылка КАК Ссылка
		|ИЗ Справочник.ПравилаКонвертацииОбъектов КАК ПКО
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.СоставыКонвертаций КАК Состав
		|	ПО Состав.Владелец = &Конвертация
		|	И Состав.ЭлементКонвертации = ПКО.Ссылка
		|	И Состав.Отключить = ЛОЖЬ
		|ГДЕ ПКО.Код В (ВЫБРАТЬ РАЗЛИЧНЫЕ ПравилоКонвертацииОбъекта
		|					ИЗ Справочник.ПравилаОбработкиДанных.ПравилаКонвертацииОбъектов
		|					ГДЕ Ссылка = &ПОД)";
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	Иначе
		МассивПКО = Новый Массив;
		Пока Выборка.Следующий() Цикл
			МассивПКО.Добавить(Выборка.Ссылка);
		КонецЦикла;
		Возврат МассивПКО;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораПКО(МассивПКО)
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Ссылка, Конвертация",МассивПКО, Объект.Конвертация));
	ОписаниеОповещенияОВыборе = Новый ОписаниеОповещения("ОбработатьВыборПКО",ЭтотОбъект);
	ОткрытьФорму("Справочник.ПравилаКонвертацииОбъектов.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,ОписаниеОповещенияОВыборе, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьВыборПКО(РезультатЗакрытияФормы, ДопПараметры) Экспорт
	Если ТипЗнч(РезультатЗакрытияФормы) = Тип("СправочникСсылка.ПравилаКонвертацииОбъектов")
		И ЗначениеЗаполнено(РезультатЗакрытияФормы) Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.ПКО;
			Элементы.ПравилаКонвертацииОбъектов.ТекущаяСтрока = РезультатЗакрытияФормы;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти









