#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	// Заполнение списка конвертаций данного правила.
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		КонвертацияДанныхXDTOВызовСервера.ПолучитьСписокКонвертацийДляЭлементаКонвертации(Объект.Ссылка, СписокКонвертаций);
	Иначе
		Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Конвертация) Тогда
			СписокКонвертаций.Добавить(ЭтаФорма.Параметры.Конвертация);
		ИначеЕсли ЗначениеЗаполнено(ЭтаФорма.Параметры.ЗначениеКопирования) Тогда
			// Возможно новый элемент копируется - тогда список конвертаций необходимо заполнить.
			КонвертацияДанныхXDTOВызовСервера.ПолучитьСписокКонвертацийДляЭлементаКонвертации(ЭтаФорма.Параметры.ЗначениеКопирования, СписокКонвертаций);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Объект.Группа) Тогда
			Объект.Группа = ЭтаФорма.Параметры.Группа;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	КонвертацияДанныхXDTOВызовСервера.ПроверитьВозможностьЗаписиАлгоритма(Отказ, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Для нового правила создать запись в регистре
	КонвертацияДанныхXDTOВызовСервера.ЗаписатьЭлементКонвертацииВСоставКонвертации(Объект.Ссылка, СписокКонвертаций);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Закрыта форма вопроса о составе конвертаций с изменением состава
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		ОбработкаВыбораНаСервере();
		ЭтаФорма.ОбновитьОтображениеДанных();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере()
	// Изменился состав конвертаций
	КонвертацияДанныхXDTOВызовСервера.ПолучитьСписокКонвертацийДляЭлементаКонвертации(Объект.Ссылка, СписокКонвертаций);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_Алгоритмы",, Объект.Ссылка);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЭлементВСоставКонвертации(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстПредупреждения = НСтр("ru = 'Сначала необходимо записать алгоритм'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбранаКонвертация", ЭтаФорма);
	ОткрытьФорму("Справочник.Конвертации.ФормаВыбора",, ЭтаФорма,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ВыбранаКонвертация(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если НЕ ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли;
	ОтказДобавления = Ложь;
	ДополнитьСоставКонвертации(РезультатЗакрытия, Объект.Ссылка, ОтказДобавления);
	Если ОтказДобавления Тогда
		ТекстПредупреждения = НСтр("ru = 'Данный элемент уже входит в состав выбранной конвертации'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
	Иначе
		Элементы.СписокКонвертаций.ОбновитьТекстРедактирования();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДополнитьСоставКонвертации(Конвертация, ЭлементКонвертации, ОтказДобавления)
	// Проверка на дубли
	Если КонвертацияДанныхXDTOВызовСервера.ЭлементКонвертацииВходитВСоставКонвертации(Конвертация, ЭлементКонвертации) Тогда
		ОтказДобавления = Истина;
		Возврат;
	КонецЕсли;
	Справочники.СоставыКонвертаций.ДополнитьСоставКонвертации(Конвертация, ЭлементКонвертации);
	КонвертацияДанныхXDTOВызовСервера.ПолучитьСписокКонвертацийДляЭлементаКонвертации(Объект.Ссылка, СписокКонвертаций);
КонецПроцедуры

#КонецОбласти
