#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ЭтаФорма.Параметры.Свойство("ПараметрыДерева") Тогда
		ПараметрыДерева = ЭтаФорма.Параметры.ПараметрыДерева;
		Если ПараметрыДерева.Свойство("ОбъектКопирования") Тогда
			ОбъектКопирования = ЭтаФорма.Параметры.ПараметрыДерева.ОбъектКопирования;
			ЗаполнитьЗначенияСвойств(Объект, ОбъектКопирования,"Владелец, Наименование, Тип, ОписаниеТекст, ОбъектХранительСвойств, Обязательное, ТипОбщегоСвойства");
			ТекстОписания = ОбъектКопирования.Описание.Получить();
		Иначе
			Если ПараметрыДерева.Свойство("ОбъектФормата") Тогда
				Объект.Владелец = ПараметрыДерева.ОбъектФормата;
			КонецЕсли;
		КонецЕсли;
		Объект.Порядок = ПараметрыДерева.ПредыдущееСвойство.Порядок + 1;
	КонецЕсли;
	ВерсияФормата = Объект.Владелец.Владелец;
	ЗаполнитьСписокВыбораОбъектХранительСвойства();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьХранителяСвойства();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.ТипОбщегоСвойства = Перечисления.ТипыОбщихРеквизитов.ГруппаОбщихСвойств 
		ИЛИ ТекущийОбъект.ТипОбщегоСвойства = Перечисления.ТипыОбщихРеквизитов.ОбщаяТабличнаяЧасть Тогда
		ТекущийОбъект.Тип = ТекущийОбъект.ОбъектХранительСвойств;
	ИначеЕсли ТекущийОбъект.ТипОбщегоСвойства = Перечисления.ТипыОбщихРеквизитов.КлючевыеСвойства Тогда
		ПозицияТочки = Найти(Объект.Владелец.Наименование, ".");
		Если ПозицияТочки = 0 Тогда
			ИмяКС = "КлючевыеСвойства"+СокрЛП(Объект.Владелец.Наименование)
		Иначе
			ИмяКС = "КлючевыеСвойства"+СокрЛП(Сред(Объект.Владелец.Наименование, ПозицияТочки + 1));
		КонецЕсли;
		ТекущийОбъект.Тип = ИмяКС;
	Иначе
		ТекущийОбъект.Тип = СокрЛП(ТекущийОбъект.Владелец.Наименование) + "." + ТекущийОбъект.Наименование;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.ТипОбщегоСвойства = Перечисления.ТипыОбщихРеквизитов.КлючевыеСвойства Тогда
		Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ОбъектХранительСвойств) Тогда
			ПозицияТочки = Найти(ТекущийОбъект.Владелец.Наименование, ".");
			Если ПозицияТочки = 0 Тогда
				ИмяКС = "КлючевыеСвойства"+СокрЛП(ТекущийОбъект.Владелец.Наименование)
			Иначе
				ИмяКС = "КлючевыеСвойства"+СокрЛП(Сред(ТекущийОбъект.Владелец.Наименование, ПозицияТочки + 1));
			КонецЕсли;
			
			ТекущийОбъект.ОбъектХранительСвойств = ИмяКС;
			// Заполнение объекта хранителя.
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Наименование
			|ИЗ Справочник.ОбъектыФормата
			|ГДЕ Владелец = &ВерсияФормата И ПометкаУдаления = ЛОЖЬ
			|	И ТипОбщегоРеквизита = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.КлючевыеСвойства)
			|	И Наименование = &ТекНаименование
			|УПОРЯДОЧИТЬ ПО Наименование";
			Запрос.УстановитьПараметр("ВерсияФормата", ВерсияФормата);
			Запрос.УстановитьПараметр("ТекНаименование", ТекущийОбъект.ОбъектХранительСвойств);
			Результат = Запрос.Выполнить();
			Если Результат.Пустой() Тогда
				ОбъектФормата = Справочники.ОбъектыФормата.СоздатьЭлемент();
				ОбъектФормата.Владелец = ТекущийОбъект.Владелец.Владелец;
				ОбъектФормата.ТипОбщегоРеквизита = Перечисления.ТипыОбщихРеквизитов.КлючевыеСвойства;
				ОбъектФормата.Наименование = ТекущийОбъект.ОбъектХранительСвойств;
				ОбъектФормата.Записать();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ТекущийОбъект.ТипОбщегоСвойства) Тогда
		// Автоматическое создание подчиненных элементов из общего при необходимости
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ОбъектХранитель.Ссылка КАК ОбъектХранитель,
		|	СвойстваХранителя.Ссылка КАК СвойствоХранителяСсылка,
		|	СвойстваТекущие.Ссылка КАК СвойствоТекущееСсылка
		|ИЗ Справочник.ОбъектыФормата КАК ОбъектХранитель
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваФормата КАК СвойстваХранителя
		|	ПО СвойстваХранителя.Владелец =  ОбъектХранитель.Ссылка
		|		И СвойстваХранителя.ПометкаУдаления = ЛОЖЬ
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваФормата КАК СвойстваТекущие
		|	ПО СвойстваТекущие.Родитель = &ТекРодитель 
		|		И СвойстваТекущие.Наименование = СвойстваХранителя.Наименование
		|		И СвойстваТекущие.ПометкаУдаления = ЛОЖЬ
		|ГДЕ ОбъектХранитель.Владелец = &ВерсияФормата И ОбъектХранитель.ПометкаУдаления = ЛОЖЬ
		|	И ОбъектХранитель.ТипОбщегоРеквизита = &ТипОбщегоРеквизита
		|	И ОбъектХранитель.Наименование = &ТекНаименование
		|	И СвойстваХранителя.Ссылка IS NOT NULL 
		|	И СвойстваТекущие.Ссылка IS NULL
		|ИТОГИ ПО СвойствоХранителяСсылка ИЕРАРХИЯ";
		Запрос.УстановитьПараметр("ВерсияФормата", ВерсияФормата);
		Запрос.УстановитьПараметр("ТекРодитель", ТекущийОбъект.Ссылка);
		Запрос.УстановитьПараметр("ТипОбщегоРеквизита", ТекущийОбъект.ТипОбщегоСвойства);
		Запрос.УстановитьПараметр("ТекНаименование", ТекущийОбъект.ОбъектХранительСвойств);
		Результат = Запрос.Выполнить();
		ОбработатьВыборкуСвойствПоИерархии(Результат, ТекущийОбъект.Ссылка, ТекущийОбъект.Владелец, 0);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ТипОбщегоСвойстваПриИзменении(Элемент)
	УстановитьВидимостьХранителяСвойства();
	Если Элементы.ОбъектХранительСвойств.Видимость Тогда
		ТипОбщегоСвойстваПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТипОбщегоСвойстваПриИзмененииНаСервере()
	ЗаполнитьСписокВыбораОбъектХранительСвойства();
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	Если Объект.Владелец.Владелец <> ВерсияФормата Тогда
		ВерсияФормата = Объект.Владелец.Владелец;
		ЗаполнитьСписокВыбораОбъектХранительСвойства();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
#Область СлужебныеПроцедурыИФункции
Процедура УстановитьВидимостьХранителяСвойства()
	Элементы.ОбъектХранительСвойств.Видимость = ЗначениеЗаполнено(Объект.ТипОбщегоСвойства);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораОбъектХранительСвойства()
	Элементы.ОбъектХранительСвойств.СписокВыбора.Очистить();
	Если НЕ ЗначениеЗаполнено(Объект.ТипОбщегоСвойства) Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Наименование
	|ИЗ Справочник.ОбъектыФормата
	|ГДЕ Владелец = &ВерсияФормата И ПометкаУдаления = ЛОЖЬ
	|	И ТипОбщегоРеквизита = &ТипОбщегоРеквизита
	|	И (Наименование = &ТекНаименование ИЛИ &НетОтбораПоНаименованию)
	|УПОРЯДОЧИТЬ ПО Наименование";
	Запрос.УстановитьПараметр("ВерсияФормата", ВерсияФормата);
	Запрос.УстановитьПараметр("ТипОбщегоРеквизита", Объект.ТипОбщегоСвойства);
	Запрос.УстановитьПараметр("НетОтбораПоНаименованию", (Объект.ТипОбщегоСвойства <> Перечисления.ТипыОбщихРеквизитов.КлючевыеСвойства));
	
	ПозицияТочки = Найти(Объект.Владелец.Наименование, ".");
	Если ПозицияТочки = 0 Тогда
		ИмяКС = "КлючевыеСвойства"+СокрЛП(Объект.Владелец.Наименование)
	Иначе
		ИмяКС = "КлючевыеСвойства"+СокрЛП(Сред(Объект.Владелец.Наименование, ПозицияТочки + 1));
	КонецЕсли;
	Запрос.УстановитьПараметр("ТекНаименование", ИмяКС);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элементы.ОбъектХранительСвойств.СписокВыбора.Добавить(Выборка.Наименование);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборкуСвойствПоИерархии(ВышестоящаяВыборка, ТекущийРодитель, ТекущийВладелец, Уровень)
	Выборка = ВышестоящаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "СвойствоХранителяСсылка");
	Пока Выборка.Следующий() Цикл
		Если Уровень > 0 И Выборка.СвойствоХранителяСсылка = ВышестоящаяВыборка.СвойствоХранителяСсылка Тогда
			Продолжить;
		КонецЕсли;

		Если Выборка.СвойствоХранителяСсылка.ЭтоГруппа Тогда
			НовСвойство = Справочники.СвойстваФормата.СоздатьГруппу();
		Иначе
			НовСвойство = Справочники.СвойстваФормата.СоздатьЭлемент();
		КонецЕсли;
		НовСвойство.Родитель = ТекущийРодитель;
		НовСвойство.Владелец = ТекущийВладелец;
		ЗаполнитьЗначенияСвойств(НовСвойство, Выборка.СвойствоХранителяСсылка,"Наименование, Тип, Обязательное, Порядок, ОбъектХранительСвойств, ТипОбщегоСвойства");
		НовСвойство.Записать();
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			ОбработатьВыборкуСвойствПоИерархии(Выборка, НовСвойство.Ссылка, ТекущийВладелец, Уровень + 1);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

