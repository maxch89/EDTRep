#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ХранилищеФорматированногоДокумента = Новый ХранилищеЗначения(ТекстОписания);
	ТекущийОбъект.Описание = ХранилищеФорматированногоДокумента;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если НЕ ЗначениеЗаполнено(ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	// Создание свойств и значений по объекту копирования
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СвойствоФорматаКопируемые.Ссылка КАК Ссылка
	|ИЗ Справочник.СвойстваФормата КАК СвойствоФорматаКопируемые
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваФормата КАК СвойствоФорматаОбъекта
	|ПО СвойствоФорматаКопируемые.Наименование = СвойствоФорматаОбъекта.Наименование
	|	И СвойствоФорматаКопируемые.ЭтоГруппа = СвойствоФорматаОбъекта.ЭтоГруппа
	|	И СвойствоФорматаОбъекта.ПометкаУдаления = ЛОЖЬ
	|	И СвойствоФорматаОбъекта.Владелец = &ЭтотОбъектСсылка
	|ГДЕ СвойствоФорматаКопируемые.ПометкаУдаления = ЛОЖЬ
	|	И СвойствоФорматаКопируемые.Владелец = &ОбъектКопирования
	|	И СвойствоФорматаОбъекта.Ссылка IS NULL
	|ИТОГИ ПО СвойствоФорматаКопируемые.Ссылка ИЕРАРХИЯ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыФорматаКлючевые.Ссылка 			КАК ОбъектФорматаКлючевыеСвойства,
	|	СвойстваФорматаКлючевые.Наименование 	КАК НаименованиеКлючевогоСвойства,
	|	СвойстваФорматаКлючевые.Ссылка 			КАК КлючевоеСвойство
	|ИЗ Справочник.ОбъектыФормата КАК ОбъектыФорматаКлючевые
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваФормата КАК СвойстваФорматаКлючевые
	|	ПО СвойстваФорматаКлючевые.Владелец = ОбъектыФорматаКлючевые.Ссылка
	|		И СвойстваФорматаКлючевые.ПометкаУдаления = ЛОЖЬ
	|ГДЕ ОбъектыФорматаКлючевые.Владелец = &ВерсияФормата
	|	И ОбъектыФорматаКлючевые.ТипОбщегоРеквизита = ЗНАЧЕНИЕ(Перечисление.ТипыОбщихРеквизитов.КлючевыеСвойства)
	|	И ОбъектыФорматаКлючевые.ПометкаУдаления = ЛОЖЬ
	|	И ОбъектыФорматаКлючевые.Наименование = &НаименованиеОбъектаКлючевыеСвойства
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ЗначенияФорматаКопируемые.Наименование КАК Наименование,
	|	ЗначенияФорматаКопируемые.Комментарий КАК Комментарий
	|ИЗ Справочник.ЗначенияФормата КАК ЗначенияФорматаКопируемые
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияФормата КАК ЗначенияФорматаОбъекта
	|ПО ЗначенияФорматаКопируемые.Наименование = ЗначенияФорматаОбъекта.Наименование
	|	И ЗначенияФорматаОбъекта.ПометкаУдаления = ЛОЖЬ
	|	И ЗначенияФорматаОбъекта.Владелец = &ЭтотОбъектСсылка
	|ГДЕ ЗначенияФорматаКопируемые.ПометкаУдаления = ЛОЖЬ
	|	И ЗначенияФорматаКопируемые.Владелец = &ОбъектКопирования
	|	И ЗначенияФорматаОбъекта.Ссылка IS NULL";
	НаименованиеОбъектаКлючевыеСвойства = "КлючевыеСвойства";
	ПозицияТочки = Найти(ТекущийОбъект.Наименование, ".");
	Если ПозицияТочки > 0 Тогда
		НаименованиеОбъектаКлючевыеСвойства = НаименованиеОбъектаКлючевыеСвойства + Сред(ТекущийОбъект.Наименование, ПозицияТочки+1);
	Иначе
		НаименованиеОбъектаКлючевыеСвойства = НаименованиеОбъектаКлючевыеСвойства + ТекущийОбъект.Наименование;
	КонецЕсли;
	Запрос.УстановитьПараметр("ОбъектКопирования", ОбъектКопирования);
	Запрос.УстановитьПараметр("ЭтотОбъектСсылка", ТекущийОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВерсияФормата", ТекущийОбъект.Владелец);
	Запрос.УстановитьПараметр("НаименованиеОбъектаКлючевыеСвойства", НаименованиеОбъектаКлючевыеСвойства);

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ЕстьСвойства = Ложь;
	Если НЕ РезультатыЗапроса[0].Пустой() Тогда
		ЕстьСвойства = Истина;
		ТаблицаКлючевыеСвойства = Новый ТаблицаЗначений;
		ТаблицаКлючевыеСвойства.Колонки.Добавить("ОбъектФорматаКлючевыеСвойства");
		ТаблицаКлючевыеСвойства.Колонки.Добавить("НаименованиеКлючевогоСвойства");
		ТаблицаКлючевыеСвойства.Колонки.Добавить("КлючевоеСвойство");
		Если НЕ РезультатыЗапроса[1].Пустой() Тогда
			ТаблицаКлючевыеСвойства = РезультатыЗапроса[1].Выгрузить();
		КонецЕсли;
		ВыборкаИерархия = РезультатыЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка");
		ОбработатьВыборкуПоИерархии(ВыборкаИерархия, ТекущийОбъект.Ссылка, Неопределено, ТаблицаКлючевыеСвойства, НаименованиеОбъектаКлючевыеСвойства);
	КонецЕсли;
	Если НЕ РезультатыЗапроса[2].Пустой() Тогда
		Выборка = РезультатыЗапроса[2].Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока Выборка.Следующий() Цикл
			НовЗначениеФормата = Справочники.ЗначенияФормата.СоздатьЭлемент();
			НовЗначениеФормата.Владелец = ТекущийОбъект.Ссылка;
			НовЗначениеФормата.Наименование = Выборка.Наименование;
			НовЗначениеФормата.Комментарий = Выборка.Комментарий;
			НовЗначениеФормата.Записать();
		КонецЦикла;
		// Создание типа формата при необходимости.
		Если НЕ ЕстьСвойства Тогда
			ТипСсылка = Справочники.ТипыФормата.НайтиПоНаименованию(ТекущийОбъект.Наименование,,,ТекущийОбъект.Владелец);
			ТипИсточник = Справочники.ТипыФормата.НайтиПоНаименованию(ОбъектКопирования.Наименование,,,ТекущийОбъект.Владелец);
			Если НЕ ЗначениеЗаполнено(ТипСсылка) И ЗначениеЗаполнено(ТипИсточник) Тогда
				ТипОбъект = Справочники.ТипыФормата.СоздатьЭлемент();
				ТипОбъект.Владелец = ТекущийОбъект.Владелец;
				ТипОбъект.Наименование = ТекущийОбъект.Наименование;
				ЗаполнитьЗначенияСвойств(ТипОбъект, ТипИсточник,"БазовыйТип, ПространствоИмен, ВключатьВОписание, ПространствоИменБазовогоТипа");
				ТипОбъект.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстОписания = Объект.Ссылка.Описание.Получить();
	КонецЕсли;
	Если ЭтаФорма.Параметры.Свойство("ПараметрыДерева") Тогда
		СозданиеОбъектаИзДереваФормата(ЭтаФорма.Параметры.ПараметрыДерева);
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура СозданиеОбъектаИзДереваФормата(ПараметрыДерева)
	Объект.Владелец = ПараметрыДерева.ВерсияФормата;
	Если ПараметрыДерева.Свойство("ШаблонНаименования") Тогда
		Объект.Наименование = ПараметрыДерева.ШаблонНаименования;
	КонецЕсли;
	Если ПараметрыДерева.Свойство("ТипОбщегоРеквизита") Тогда
		ТипОбщегоРеквизита = ПараметрыДерева.ТипОбщегоРеквизита;
		Если ТипЗнч(ТипОбщегоРеквизита) = Тип("Строка") Тогда
			Объект.ТипОбщегоРеквизита = Перечисления.ТипыОбщихРеквизитов[ТипОбщегоРеквизита];
		Иначе
			Объект.ТипОбщегоРеквизита = ТипОбщегоРеквизита;
		КонецЕсли;
	КонецЕсли;
	Если ПараметрыДерева.Свойство("ОбъектКопирования") Тогда
		ОбъектКопирования = ПараметрыДерева.ОбъектКопирования;
		ЗаполнитьЗначенияСвойств(Объект, ОбъектКопирования,"ТипОбщегоРеквизита");
		ТекстОписания = ОбъектКопирования.Описание.Получить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборкуПоИерархии(ВыборкаИерархия, ТекВладелец, ТекРодитель, ТаблицаКлючевыеСвойства, НаименованиеОбъектаКлючевыеСвойства)
	Пока ВыборкаИерархия.Следующий() Цикл
		Если ТекРодитель <> Неопределено И ВыборкаИерархия.Ссылка.Наименование = ТекРодитель.Наименование Тогда
			Продолжить;
		КонецЕсли;
		КопируемыеСвойства = "";
		Если ВыборкаИерархия.Ссылка.ЭтоГруппа Тогда
			НовОбъект = Справочники.СвойстваФормата.СоздатьГруппу();
			Если ВыборкаИерархия.Ссылка.Наименование = "КлючевыеСвойства" Тогда
				НовОбъект.ОбъектХранительСвойств = НаименованиеОбъектаКлючевыеСвойства;
				НовОбъект.Тип = НаименованиеОбъектаКлючевыеСвойства;
				Если ТаблицаКлючевыеСвойства.Количество() = 0 Тогда
					// Необходимо создать объект формата = ключевое свойство
					ОбъектКС = Справочники.ОбъектыФормата.СоздатьЭлемент();
					ОбъектКС.Наименование = НаименованиеОбъектаКлючевыеСвойства;
					ОбъектКС.Владелец = ТекВладелец.Владелец;
					ОбъектКС.ТипОбщегоРеквизита = Перечисления.ТипыОбщихРеквизитов.КлючевыеСвойства;
					ОбъектКС.Записать();
					ОбъектКССсылка = ОбъектКС.Ссылка;
					СтрокаТаб = ТаблицаКлючевыеСвойства.Добавить();
					СтрокаТаб.ОбъектФорматаКлючевыеСвойства = ОбъектКССсылка;
				Иначе 
					ОбъектКССсылка = ТаблицаКлючевыеСвойства[0].ОбъектФорматаКлючевыеСвойства;
				КонецЕсли;
				КопируемыеСвойства = "Наименование, ОписаниеТекст, Обязательное, Порядок, ТипОбщегоСвойства";
			КонецЕсли;
		Иначе
			НовОбъект = Справочники.СвойстваФормата.СоздатьЭлемент();
			Если ТекРодитель <> Неопределено И ТекРодитель.Наименование = "КлючевыеСвойства" Тогда
				СтрокиТаб = ТаблицаКлючевыеСвойства.Найти(ВыборкаИерархия.Ссылка.Наименование, "НаименованиеКлючевогоСвойства");
				Если СтрокиТаб = Неопределено Тогда
					// Необходимо создать свойство в объекте КлючевыеСвойства
					СвойствоКС = Справочники.СвойстваФормата.СоздатьЭлемент();
					СвойствоКС.Владелец = ТаблицаКлючевыеСвойства[0].ОбъектФорматаКлючевыеСвойства;
					ЗаполнитьЗначенияСвойств(СвойствоКС, ВыборкаИерархия.Ссылка, "Наименование, Тип, ОписаниеТекст, Обязательное, Порядок");
					СвойствоКС.Записать();
					СтрокаТаб = ТаблицаКлючевыеСвойства.Добавить();
					СтрокаТаб.ОбъектФорматаКлючевыеСвойства = ТаблицаКлючевыеСвойства[0].ОбъектФорматаКлючевыеСвойства;
					СтрокаТаб.НаименованиеКлючевогоСвойства = СвойствоКС.Наименование;
					СтрокаТаб.КлючевоеСвойство = СвойствоКС.Ссылка;
				КонецЕсли;
				КопируемыеСвойства = "Наименование, Тип, ОписаниеТекст, Обязательное, Порядок, ТипОбщегоСвойства";
			КонецЕсли;
			Если ВыборкаИерархия.Ссылка.Наименование = "Ссылка" Тогда
				// При необходимости создать тип формата и прописать его в типе свойства.
				ИмяТипа = ТекВладелец.Наименование;
				Если Найти(ИмяТипа, "Документ") > 0 Тогда
					ИмяТипа = СтрЗаменить(ИмяТипа, "Документ", "ДокументСсылка");
				ИначеЕсли Найти(ИмяТипа, "Справочник") > 0 Тогда
					ИмяТипа = СтрЗаменить(ИмяТипа, "Справочник", "СправочникСсылка");
				КонецЕсли;
				НовОбъект.Тип = ИмяТипа;
				ТипСсылка = Справочники.ТипыФормата.НайтиПоНаименованию(ИмяТипа,,,ТекВладелец.Владелец);
				ТипИсточник = Справочники.ТипыФормата.НайтиПоНаименованию(ВыборкаИерархия.Ссылка.Тип,,,ТекВладелец.Владелец);
				Если НЕ ЗначениеЗаполнено(ТипСсылка) И ЗначениеЗаполнено(ТипИсточник) Тогда
					ТипОбъект = Справочники.ТипыФормата.СоздатьЭлемент();
					ТипОбъект.Владелец = ТекВладелец.Владелец;
					ТипОбъект.Наименование = ИмяТипа;
					ЗаполнитьЗначенияСвойств(ТипОбъект, ТипИсточник,"БазовыйТип, ПространствоИмен, ВключатьВОписание, ПространствоИменБазовогоТипа");
					ТипОбъект.Записать();
				КонецЕсли;
				КопируемыеСвойства = "Наименование, ОписаниеТекст, Обязательное, Порядок, ТипОбщегоСвойства";
			КонецЕсли;
		КонецЕсли;
		Если КопируемыеСвойства = "" Тогда
			КопируемыеСвойства = "Наименование, Тип, ОписаниеТекст, Обязательное, Порядок, ТипОбщегоСвойства, ОбъектХранительСвойств";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НовОбъект, ВыборкаИерархия.Ссылка, КопируемыеСвойства);
		НовОбъект.Описание = Новый ХранилищеЗначения(ВыборкаИерархия.Ссылка.Описание.Получить());
		НовОбъект.Владелец = ТекВладелец;
		НовОбъект.Родитель = ТекРодитель;
		НовОбъект.Записать();
		Если ВыборкаИерархия.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			ВыборкаНижестоящая = ВыборкаИерархия.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка");
			ОбработатьВыборкуПоИерархии(ВыборкаНижестоящая, ТекВладелец, НовОбъект.Ссылка, ТаблицаКлючевыеСвойства, НаименованиеОбъектаКлючевыеСвойства);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти